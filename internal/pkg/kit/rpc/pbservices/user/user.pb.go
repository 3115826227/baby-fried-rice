// proto 文件版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: user.proto

//import "google/api/annotations.proto";
// 生成文件的包名

package user

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqUserDaoById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ReqUserDaoById) Reset() {
	*x = ReqUserDaoById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserDaoById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserDaoById) ProtoMessage() {}

func (x *ReqUserDaoById) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserDaoById.ProtoReflect.Descriptor instead.
func (*ReqUserDaoById) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *ReqUserDaoById) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RspUserDaoById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserDao `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *RspUserDaoById) Reset() {
	*x = RspUserDaoById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserDaoById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserDaoById) ProtoMessage() {}

func (x *RspUserDaoById) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserDaoById.ProtoReflect.Descriptor instead.
func (*RspUserDaoById) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *RspUserDaoById) GetUsers() []*UserDao {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	HeadImgUrl string `protobuf:"bytes,3,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	IsOfficial bool   `protobuf:"varint,4,opt,name=isOfficial,proto3" json:"isOfficial,omitempty"`
}

func (x *UserDao) Reset() {
	*x = UserDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDao) ProtoMessage() {}

func (x *UserDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDao.ProtoReflect.Descriptor instead.
func (*UserDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDao) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserDao) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *UserDao) GetIsOfficial() bool {
	if x != nil {
		return x.IsOfficial
	}
	return false
}

type ReqUserRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login    *ReqPasswordLogin `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Username string            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Gender   bool              `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone    string            `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ReqUserRegister) Reset() {
	*x = ReqUserRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserRegister) ProtoMessage() {}

func (x *ReqUserRegister) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserRegister.ProtoReflect.Descriptor instead.
func (*ReqUserRegister) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *ReqUserRegister) GetLogin() *ReqPasswordLogin {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *ReqUserRegister) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqUserRegister) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *ReqUserRegister) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ReqPasswordLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginName string `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Ip        string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ReqPasswordLogin) Reset() {
	*x = ReqPasswordLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPasswordLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPasswordLogin) ProtoMessage() {}

func (x *ReqPasswordLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPasswordLogin.ProtoReflect.Descriptor instead.
func (*ReqPasswordLogin) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *ReqPasswordLogin) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *ReqPasswordLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqPasswordLogin) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// 定义登录函数输入参数
type ReqUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *ReqUserLogin) Reset() {
	*x = ReqUserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserLogin) ProtoMessage() {}

func (x *ReqUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserLogin.ProtoReflect.Descriptor instead.
func (*ReqUserLogin) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *ReqUserLogin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqUserLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RspDaoUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	LoginName string `protobuf:"bytes,2,opt,name=loginName,proto3" json:"loginName,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	SchoolId  string `protobuf:"bytes,4,opt,name=schoolId,proto3" json:"schoolId,omitempty"`
	Gender    bool   `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Age       int64  `protobuf:"varint,6,opt,name=age,proto3" json:"age,omitempty"`
	Phone     string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *RspDaoUser) Reset() {
	*x = RspDaoUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDaoUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDaoUser) ProtoMessage() {}

func (x *RspDaoUser) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDaoUser.ProtoReflect.Descriptor instead.
func (*RspDaoUser) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *RspDaoUser) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RspDaoUser) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *RspDaoUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RspDaoUser) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *RspDaoUser) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *RspDaoUser) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *RspDaoUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 定义登录函数返回参数
type RspDaoUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *RspDaoUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *RspDaoUserLogin) Reset() {
	*x = RspDaoUserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDaoUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDaoUserLogin) ProtoMessage() {}

func (x *RspDaoUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDaoUserLogin.ProtoReflect.Descriptor instead.
func (*RspDaoUserLogin) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *RspDaoUserLogin) GetUser() *RspDaoUser {
	if x != nil {
		return x.User
	}
	return nil
}

type DaoUserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	HeadImgUrl string `protobuf:"bytes,2,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	Username   string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	SchoolId   string `protobuf:"bytes,4,opt,name=schoolId,proto3" json:"schoolId,omitempty"`
	Gender     bool   `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Age        int64  `protobuf:"varint,6,opt,name=age,proto3" json:"age,omitempty"`
	Phone      string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Describe   string `protobuf:"bytes,8,opt,name=describe,proto3" json:"describe,omitempty"`
	Coin       int64  `protobuf:"varint,9,opt,name=coin,proto3" json:"coin,omitempty"`
	IsOfficial bool   `protobuf:"varint,10,opt,name=isOfficial,proto3" json:"isOfficial,omitempty"`
}

func (x *DaoUserDetail) Reset() {
	*x = DaoUserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaoUserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaoUserDetail) ProtoMessage() {}

func (x *DaoUserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaoUserDetail.ProtoReflect.Descriptor instead.
func (*DaoUserDetail) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *DaoUserDetail) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DaoUserDetail) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *DaoUserDetail) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DaoUserDetail) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *DaoUserDetail) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *DaoUserDetail) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *DaoUserDetail) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DaoUserDetail) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *DaoUserDetail) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *DaoUserDetail) GetIsOfficial() bool {
	if x != nil {
		return x.IsOfficial
	}
	return false
}

// 定义用户详细信息请求参数
type ReqDaoUserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqDaoUserDetail) Reset() {
	*x = ReqDaoUserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDaoUserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDaoUserDetail) ProtoMessage() {}

func (x *ReqDaoUserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDaoUserDetail.ProtoReflect.Descriptor instead.
func (*ReqDaoUserDetail) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *ReqDaoUserDetail) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// 定义用户详细信息返回参数
type RspDaoUserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *DaoUserDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *RspDaoUserDetail) Reset() {
	*x = RspDaoUserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDaoUserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDaoUserDetail) ProtoMessage() {}

func (x *RspDaoUserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDaoUserDetail.ProtoReflect.Descriptor instead.
func (*RspDaoUserDetail) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *RspDaoUserDetail) GetDetail() *DaoUserDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 定义用户详细信息修改请求
type ReqDaoUserDetailUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *DaoUserDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ReqDaoUserDetailUpdate) Reset() {
	*x = ReqDaoUserDetailUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDaoUserDetailUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDaoUserDetailUpdate) ProtoMessage() {}

func (x *ReqDaoUserDetailUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDaoUserDetailUpdate.ProtoReflect.Descriptor instead.
func (*ReqDaoUserDetailUpdate) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *ReqDaoUserDetailUpdate) GetDetail() *DaoUserDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 定义用户密码修改请求
type ReqDaoUserPwdUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *ReqDaoUserPwdUpdate) Reset() {
	*x = ReqDaoUserPwdUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDaoUserPwdUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDaoUserPwdUpdate) ProtoMessage() {}

func (x *ReqDaoUserPwdUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDaoUserPwdUpdate.ProtoReflect.Descriptor instead.
func (*ReqDaoUserPwdUpdate) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *ReqDaoUserPwdUpdate) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqDaoUserPwdUpdate) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqDaoUserPwdUpdate) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// 获取所有用户AccountId
type RspUserDaoAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIds []string `protobuf:"bytes,1,rep,name=accountIds,proto3" json:"accountIds,omitempty"`
}

func (x *RspUserDaoAll) Reset() {
	*x = RspUserDaoAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserDaoAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserDaoAll) ProtoMessage() {}

func (x *RspUserDaoAll) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserDaoAll.ProtoReflect.Descriptor instead.
func (*RspUserDaoAll) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *RspUserDaoAll) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

// 查询用户积分
type ReqUserCoinDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqUserCoinDao) Reset() {
	*x = ReqUserCoinDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserCoinDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserCoinDao) ProtoMessage() {}

func (x *ReqUserCoinDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserCoinDao.ProtoReflect.Descriptor instead.
func (*ReqUserCoinDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *ReqUserCoinDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspUserCoinDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Coin      int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *RspUserCoinDao) Reset() {
	*x = RspUserCoinDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserCoinDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserCoinDao) ProtoMessage() {}

func (x *RspUserCoinDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserCoinDao.ProtoReflect.Descriptor instead.
func (*RspUserCoinDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *RspUserCoinDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RspUserCoinDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// 添加用户积分消费记录
type ReqUserCoinLogAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Coin      int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
	CoinType  int64  `protobuf:"varint,3,opt,name=coinType,proto3" json:"coinType,omitempty"`
}

func (x *ReqUserCoinLogAddDao) Reset() {
	*x = ReqUserCoinLogAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserCoinLogAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserCoinLogAddDao) ProtoMessage() {}

func (x *ReqUserCoinLogAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserCoinLogAddDao.ProtoReflect.Descriptor instead.
func (*ReqUserCoinLogAddDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *ReqUserCoinLogAddDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqUserCoinLogAddDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *ReqUserCoinLogAddDao) GetCoinType() int64 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

// 查询用户自己积分消费记录
type ReqUserCoinLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Page      int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ReqUserCoinLogQueryDao) Reset() {
	*x = ReqUserCoinLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserCoinLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserCoinLogQueryDao) ProtoMessage() {}

func (x *ReqUserCoinLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserCoinLogQueryDao.ProtoReflect.Descriptor instead.
func (*ReqUserCoinLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *ReqUserCoinLogQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqUserCoinLogQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqUserCoinLogQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RspUserCoinLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*UserCoinLogQueryDao `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Page     int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64                  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RspUserCoinLogQueryDao) Reset() {
	*x = RspUserCoinLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserCoinLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserCoinLogQueryDao) ProtoMessage() {}

func (x *RspUserCoinLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserCoinLogQueryDao.ProtoReflect.Descriptor instead.
func (*RspUserCoinLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *RspUserCoinLogQueryDao) GetList() []*UserCoinLogQueryDao {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RspUserCoinLogQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspUserCoinLogQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RspUserCoinLogQueryDao) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserCoinLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Coin      int64  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	CoinType  int64  `protobuf:"varint,4,opt,name=coinType,proto3" json:"coinType,omitempty"`
	Describe  string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
	Timestamp int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UserCoinLogQueryDao) Reset() {
	*x = UserCoinLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCoinLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCoinLogQueryDao) ProtoMessage() {}

func (x *UserCoinLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCoinLogQueryDao.ProtoReflect.Descriptor instead.
func (*UserCoinLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *UserCoinLogQueryDao) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserCoinLogQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserCoinLogQueryDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserCoinLogQueryDao) GetCoinType() int64 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *UserCoinLogQueryDao) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *UserCoinLogQueryDao) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 删除自己的积分消费记录
type ReqUserCoinLogDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string  `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ReqUserCoinLogDeleteDao) Reset() {
	*x = ReqUserCoinLogDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserCoinLogDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserCoinLogDeleteDao) ProtoMessage() {}

func (x *ReqUserCoinLogDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserCoinLogDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqUserCoinLogDeleteDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *ReqUserCoinLogDeleteDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqUserCoinLogDeleteDao) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 查询用户积分排名
type ReqUserCoinRankQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqUserCoinRankQueryDao) Reset() {
	*x = ReqUserCoinRankQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserCoinRankQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserCoinRankQueryDao) ProtoMessage() {}

func (x *ReqUserCoinRankQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserCoinRankQueryDao.ProtoReflect.Descriptor instead.
func (*ReqUserCoinRankQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *ReqUserCoinRankQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// 用户积分排行榜
type UserCoinRankBoardQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Rank            int64  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Coin            int64  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	UpdateTimestamp int64  `protobuf:"varint,4,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
}

func (x *UserCoinRankBoardQueryDao) Reset() {
	*x = UserCoinRankBoardQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCoinRankBoardQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCoinRankBoardQueryDao) ProtoMessage() {}

func (x *UserCoinRankBoardQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCoinRankBoardQueryDao.ProtoReflect.Descriptor instead.
func (*UserCoinRankBoardQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *UserCoinRankBoardQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserCoinRankBoardQueryDao) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *UserCoinRankBoardQueryDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserCoinRankBoardQueryDao) GetUpdateTimestamp() int64 {
	if x != nil {
		return x.UpdateTimestamp
	}
	return 0
}

type RspUserCoinRankBoardQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserCoinRankBoardQueryDao `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 统计时间
	StatisticTimestamp int64 `protobuf:"varint,2,opt,name=statisticTimestamp,proto3" json:"statisticTimestamp,omitempty"`
}

func (x *RspUserCoinRankBoardQueryDao) Reset() {
	*x = RspUserCoinRankBoardQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserCoinRankBoardQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserCoinRankBoardQueryDao) ProtoMessage() {}

func (x *RspUserCoinRankBoardQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserCoinRankBoardQueryDao.ProtoReflect.Descriptor instead.
func (*RspUserCoinRankBoardQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *RspUserCoinRankBoardQueryDao) GetList() []*UserCoinRankBoardQueryDao {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RspUserCoinRankBoardQueryDao) GetStatisticTimestamp() int64 {
	if x != nil {
		return x.StatisticTimestamp
	}
	return 0
}

// 用户积分排名信息UserCoinRankQueryDao
type RspUserCoinRankQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Rank          int64  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Coin          int64  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	SameCoinUsers int64  `protobuf:"varint,4,opt,name=sameCoinUsers,proto3" json:"sameCoinUsers,omitempty"`
}

func (x *RspUserCoinRankQueryDao) Reset() {
	*x = RspUserCoinRankQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserCoinRankQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserCoinRankQueryDao) ProtoMessage() {}

func (x *RspUserCoinRankQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserCoinRankQueryDao.ProtoReflect.Descriptor instead.
func (*RspUserCoinRankQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *RspUserCoinRankQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RspUserCoinRankQueryDao) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *RspUserCoinRankQueryDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *RspUserCoinRankQueryDao) GetSameCoinUsers() int64 {
	if x != nil {
		return x.SameCoinUsers
	}
	return 0
}

// 用户签到
type ReqUserSignInDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqUserSignInDao) Reset() {
	*x = ReqUserSignInDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserSignInDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserSignInDao) ProtoMessage() {}

func (x *ReqUserSignInDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserSignInDao.ProtoReflect.Descriptor instead.
func (*ReqUserSignInDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *ReqUserSignInDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspUserSignInDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ok        bool   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Describe  string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	Coin      int64  `protobuf:"varint,4,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *RspUserSignInDao) Reset() {
	*x = RspUserSignInDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserSignInDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserSignInDao) ProtoMessage() {}

func (x *RspUserSignInDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserSignInDao.ProtoReflect.Descriptor instead.
func (*RspUserSignInDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *RspUserSignInDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RspUserSignInDao) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RspUserSignInDao) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *RspUserSignInDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// 用户签到记录查询
type ReqUserSignInLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Year      int64  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Month     int64  `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Day       int64  `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *ReqUserSignInLogQueryDao) Reset() {
	*x = ReqUserSignInLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserSignInLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserSignInLogQueryDao) ProtoMessage() {}

func (x *ReqUserSignInLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserSignInLogQueryDao.ProtoReflect.Descriptor instead.
func (*ReqUserSignInLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *ReqUserSignInLogQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqUserSignInLogQueryDao) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ReqUserSignInLogQueryDao) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ReqUserSignInLogQueryDao) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type RspUserSignInLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserSignInLogQueryDao `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspUserSignInLogQueryDao) Reset() {
	*x = RspUserSignInLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserSignInLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserSignInLogQueryDao) ProtoMessage() {}

func (x *RspUserSignInLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserSignInLogQueryDao.ProtoReflect.Descriptor instead.
func (*RspUserSignInLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *RspUserSignInLogQueryDao) GetList() []*UserSignInLogQueryDao {
	if x != nil {
		return x.List
	}
	return nil
}

type UserSignInLogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Timestamp  int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Coin       int64  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	SignInType int64  `protobuf:"varint,4,opt,name=signInType,proto3" json:"signInType,omitempty"`
}

func (x *UserSignInLogQueryDao) Reset() {
	*x = UserSignInLogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInLogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInLogQueryDao) ProtoMessage() {}

func (x *UserSignInLogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInLogQueryDao.ProtoReflect.Descriptor instead.
func (*UserSignInLogQueryDao) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

func (x *UserSignInLogQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserSignInLogQueryDao) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserSignInLogQueryDao) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserSignInLogQueryDao) GetSignInType() int64 {
	if x != nil {
		return x.SignInType
	}
	return 0
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x22, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x5c, 0x0a,
	0x10, 0x52, 0x65, 0x71, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x46, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x52, 0x73, 0x70, 0x44, 0x61, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x37, 0x0a, 0x0f, 0x52, 0x73, 0x70, 0x44, 0x61, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x73, 0x70, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x95, 0x02, 0x0a, 0x0d, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x44, 0x61,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x10, 0x52, 0x73, 0x70,
	0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x45, 0x0a, 0x16, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x71, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x77, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x2f, 0x0a, 0x0d, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x66, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x52, 0x73, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x49, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x19,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x52, 0x73,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x85, 0x01, 0x0a, 0x17, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x10, 0x52, 0x73, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x74, 0x0a, 0x18, 0x52,
	0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x22, 0x4b, 0x0a, 0x18, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x87,
	0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x32, 0xc6, 0x08, 0x0a, 0x07, 0x44, 0x61, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x71, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f,
	0x50, 0x77, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x44, 0x61, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x41,
	0x6c, 0x6c, 0x12, 0x39, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61,
	0x6f, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x47, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x44,
	0x61, 0x6f, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x4d, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x6f, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a,
	0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x57,
	0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x3f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x6f,
	0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x57, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x42, 0x36, 0x5a, 0x34, 0x62, 0x61, 0x62, 0x79, 0x2d, 0x66, 0x72, 0x69, 0x65, 0x64, 0x2d,
	0x72, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_user_proto_goTypes = []interface{}{
	(*ReqUserDaoById)(nil),               // 0: user.ReqUserDaoById
	(*RspUserDaoById)(nil),               // 1: user.RspUserDaoById
	(*UserDao)(nil),                      // 2: user.UserDao
	(*ReqUserRegister)(nil),              // 3: user.ReqUserRegister
	(*ReqPasswordLogin)(nil),             // 4: user.ReqPasswordLogin
	(*ReqUserLogin)(nil),                 // 5: user.ReqUserLogin
	(*RspDaoUser)(nil),                   // 6: user.RspDaoUser
	(*RspDaoUserLogin)(nil),              // 7: user.RspDaoUserLogin
	(*DaoUserDetail)(nil),                // 8: user.DaoUserDetail
	(*ReqDaoUserDetail)(nil),             // 9: user.ReqDaoUserDetail
	(*RspDaoUserDetail)(nil),             // 10: user.RspDaoUserDetail
	(*ReqDaoUserDetailUpdate)(nil),       // 11: user.ReqDaoUserDetailUpdate
	(*ReqDaoUserPwdUpdate)(nil),          // 12: user.ReqDaoUserPwdUpdate
	(*RspUserDaoAll)(nil),                // 13: user.RspUserDaoAll
	(*ReqUserCoinDao)(nil),               // 14: user.ReqUserCoinDao
	(*RspUserCoinDao)(nil),               // 15: user.RspUserCoinDao
	(*ReqUserCoinLogAddDao)(nil),         // 16: user.ReqUserCoinLogAddDao
	(*ReqUserCoinLogQueryDao)(nil),       // 17: user.ReqUserCoinLogQueryDao
	(*RspUserCoinLogQueryDao)(nil),       // 18: user.RspUserCoinLogQueryDao
	(*UserCoinLogQueryDao)(nil),          // 19: user.UserCoinLogQueryDao
	(*ReqUserCoinLogDeleteDao)(nil),      // 20: user.ReqUserCoinLogDeleteDao
	(*ReqUserCoinRankQueryDao)(nil),      // 21: user.ReqUserCoinRankQueryDao
	(*UserCoinRankBoardQueryDao)(nil),    // 22: user.UserCoinRankBoardQueryDao
	(*RspUserCoinRankBoardQueryDao)(nil), // 23: user.RspUserCoinRankBoardQueryDao
	(*RspUserCoinRankQueryDao)(nil),      // 24: user.RspUserCoinRankQueryDao
	(*ReqUserSignInDao)(nil),             // 25: user.ReqUserSignInDao
	(*RspUserSignInDao)(nil),             // 26: user.RspUserSignInDao
	(*ReqUserSignInLogQueryDao)(nil),     // 27: user.ReqUserSignInLogQueryDao
	(*RspUserSignInLogQueryDao)(nil),     // 28: user.RspUserSignInLogQueryDao
	(*UserSignInLogQueryDao)(nil),        // 29: user.UserSignInLogQueryDao
	(*emptypb.Empty)(nil),                // 30: google.protobuf.Empty
}
var file_user_proto_depIdxs = []int32{
	2,  // 0: user.RspUserDaoById.users:type_name -> user.UserDao
	4,  // 1: user.ReqUserRegister.login:type_name -> user.ReqPasswordLogin
	6,  // 2: user.RspDaoUserLogin.user:type_name -> user.RspDaoUser
	8,  // 3: user.RspDaoUserDetail.detail:type_name -> user.DaoUserDetail
	8,  // 4: user.ReqDaoUserDetailUpdate.detail:type_name -> user.DaoUserDetail
	19, // 5: user.RspUserCoinLogQueryDao.list:type_name -> user.UserCoinLogQueryDao
	22, // 6: user.RspUserCoinRankBoardQueryDao.list:type_name -> user.UserCoinRankBoardQueryDao
	29, // 7: user.RspUserSignInLogQueryDao.list:type_name -> user.UserSignInLogQueryDao
	3,  // 8: user.DaoUser.UserDaoRegister:input_type -> user.ReqUserRegister
	4,  // 9: user.DaoUser.UserDaoLogin:input_type -> user.ReqPasswordLogin
	9,  // 10: user.DaoUser.UserDaoDetail:input_type -> user.ReqDaoUserDetail
	11, // 11: user.DaoUser.UserDaoDetailUpdate:input_type -> user.ReqDaoUserDetailUpdate
	12, // 12: user.DaoUser.UserDaoPwdUpdate:input_type -> user.ReqDaoUserPwdUpdate
	0,  // 13: user.DaoUser.UserDaoById:input_type -> user.ReqUserDaoById
	30, // 14: user.DaoUser.UserDaoAll:input_type -> google.protobuf.Empty
	14, // 15: user.DaoUser.UserCoinDao:input_type -> user.ReqUserCoinDao
	16, // 16: user.DaoUser.UserCoinLogAddDao:input_type -> user.ReqUserCoinLogAddDao
	17, // 17: user.DaoUser.UserCoinLogQueryDao:input_type -> user.ReqUserCoinLogQueryDao
	20, // 18: user.DaoUser.UserCoinLogDeleteDao:input_type -> user.ReqUserCoinLogDeleteDao
	21, // 19: user.DaoUser.UserCoinRankQueryDao:input_type -> user.ReqUserCoinRankQueryDao
	30, // 20: user.DaoUser.UserCoinRankBoardQueryDao:input_type -> google.protobuf.Empty
	25, // 21: user.DaoUser.UserSignInDao:input_type -> user.ReqUserSignInDao
	27, // 22: user.DaoUser.UserSignInLogQueryDao:input_type -> user.ReqUserSignInLogQueryDao
	30, // 23: user.DaoUser.UserDaoRegister:output_type -> google.protobuf.Empty
	7,  // 24: user.DaoUser.UserDaoLogin:output_type -> user.RspDaoUserLogin
	10, // 25: user.DaoUser.UserDaoDetail:output_type -> user.RspDaoUserDetail
	30, // 26: user.DaoUser.UserDaoDetailUpdate:output_type -> google.protobuf.Empty
	30, // 27: user.DaoUser.UserDaoPwdUpdate:output_type -> google.protobuf.Empty
	1,  // 28: user.DaoUser.UserDaoById:output_type -> user.RspUserDaoById
	13, // 29: user.DaoUser.UserDaoAll:output_type -> user.RspUserDaoAll
	15, // 30: user.DaoUser.UserCoinDao:output_type -> user.RspUserCoinDao
	30, // 31: user.DaoUser.UserCoinLogAddDao:output_type -> google.protobuf.Empty
	18, // 32: user.DaoUser.UserCoinLogQueryDao:output_type -> user.RspUserCoinLogQueryDao
	30, // 33: user.DaoUser.UserCoinLogDeleteDao:output_type -> google.protobuf.Empty
	24, // 34: user.DaoUser.UserCoinRankQueryDao:output_type -> user.RspUserCoinRankQueryDao
	23, // 35: user.DaoUser.UserCoinRankBoardQueryDao:output_type -> user.RspUserCoinRankBoardQueryDao
	26, // 36: user.DaoUser.UserSignInDao:output_type -> user.RspUserSignInDao
	28, // 37: user.DaoUser.UserSignInLogQueryDao:output_type -> user.RspUserSignInLogQueryDao
	23, // [23:38] is the sub-list for method output_type
	8,  // [8:23] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserDaoById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserDaoById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPasswordLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDaoUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDaoUserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaoUserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDaoUserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDaoUserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDaoUserDetailUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDaoUserPwdUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserDaoAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserCoinDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserCoinDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserCoinLogAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserCoinLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserCoinLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCoinLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserCoinLogDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserCoinRankQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCoinRankBoardQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserCoinRankBoardQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserCoinRankQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserSignInDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserSignInDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserSignInLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserSignInLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInLogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DaoUserClient is the client API for DaoUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DaoUserClient interface {
	// 用户注册函数
	UserDaoRegister(ctx context.Context, in *ReqUserRegister, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 用户登录函数
	UserDaoLogin(ctx context.Context, in *ReqPasswordLogin, opts ...grpc.CallOption) (*RspDaoUserLogin, error)
	// 用户详细信息获取函数
	UserDaoDetail(ctx context.Context, in *ReqDaoUserDetail, opts ...grpc.CallOption) (*RspDaoUserDetail, error)
	// 用户详细信息修改函数
	UserDaoDetailUpdate(ctx context.Context, in *ReqDaoUserDetailUpdate, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 用户修改密码
	UserDaoPwdUpdate(ctx context.Context, in *ReqDaoUserPwdUpdate, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 根据id查询用户信息
	UserDaoById(ctx context.Context, in *ReqUserDaoById, opts ...grpc.CallOption) (*RspUserDaoById, error)
	// 获取所有用户id
	UserDaoAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*RspUserDaoAll, error)
	// 查询用户积分
	UserCoinDao(ctx context.Context, in *ReqUserCoinDao, opts ...grpc.CallOption) (*RspUserCoinDao, error)
	// 添加用户积分消息费记录
	UserCoinLogAddDao(ctx context.Context, in *ReqUserCoinLogAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询用户积分消费记录
	UserCoinLogQueryDao(ctx context.Context, in *ReqUserCoinLogQueryDao, opts ...grpc.CallOption) (*RspUserCoinLogQueryDao, error)
	// 删除用户积分消费记录
	UserCoinLogDeleteDao(ctx context.Context, in *ReqUserCoinLogDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询用户积分排名
	UserCoinRankQueryDao(ctx context.Context, in *ReqUserCoinRankQueryDao, opts ...grpc.CallOption) (*RspUserCoinRankQueryDao, error)
	// 查询用户积分排行榜
	UserCoinRankBoardQueryDao(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*RspUserCoinRankBoardQueryDao, error)
	// 用户签到
	UserSignInDao(ctx context.Context, in *ReqUserSignInDao, opts ...grpc.CallOption) (*RspUserSignInDao, error)
	// 用户签到记录查询
	UserSignInLogQueryDao(ctx context.Context, in *ReqUserSignInLogQueryDao, opts ...grpc.CallOption) (*RspUserSignInLogQueryDao, error)
}

type daoUserClient struct {
	cc grpc.ClientConnInterface
}

func NewDaoUserClient(cc grpc.ClientConnInterface) DaoUserClient {
	return &daoUserClient{cc}
}

func (c *daoUserClient) UserDaoRegister(ctx context.Context, in *ReqUserRegister, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoLogin(ctx context.Context, in *ReqPasswordLogin, opts ...grpc.CallOption) (*RspDaoUserLogin, error) {
	out := new(RspDaoUserLogin)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoDetail(ctx context.Context, in *ReqDaoUserDetail, opts ...grpc.CallOption) (*RspDaoUserDetail, error) {
	out := new(RspDaoUserDetail)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoDetailUpdate(ctx context.Context, in *ReqDaoUserDetailUpdate, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoDetailUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoPwdUpdate(ctx context.Context, in *ReqDaoUserPwdUpdate, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoPwdUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoById(ctx context.Context, in *ReqUserDaoById, opts ...grpc.CallOption) (*RspUserDaoById, error) {
	out := new(RspUserDaoById)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserDaoAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*RspUserDaoAll, error) {
	out := new(RspUserDaoAll)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserDaoAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinDao(ctx context.Context, in *ReqUserCoinDao, opts ...grpc.CallOption) (*RspUserCoinDao, error) {
	out := new(RspUserCoinDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinLogAddDao(ctx context.Context, in *ReqUserCoinLogAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinLogAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinLogQueryDao(ctx context.Context, in *ReqUserCoinLogQueryDao, opts ...grpc.CallOption) (*RspUserCoinLogQueryDao, error) {
	out := new(RspUserCoinLogQueryDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinLogQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinLogDeleteDao(ctx context.Context, in *ReqUserCoinLogDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinLogDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinRankQueryDao(ctx context.Context, in *ReqUserCoinRankQueryDao, opts ...grpc.CallOption) (*RspUserCoinRankQueryDao, error) {
	out := new(RspUserCoinRankQueryDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinRankQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserCoinRankBoardQueryDao(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*RspUserCoinRankBoardQueryDao, error) {
	out := new(RspUserCoinRankBoardQueryDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserCoinRankBoardQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserSignInDao(ctx context.Context, in *ReqUserSignInDao, opts ...grpc.CallOption) (*RspUserSignInDao, error) {
	out := new(RspUserSignInDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserSignInDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoUserClient) UserSignInLogQueryDao(ctx context.Context, in *ReqUserSignInLogQueryDao, opts ...grpc.CallOption) (*RspUserSignInLogQueryDao, error) {
	out := new(RspUserSignInLogQueryDao)
	err := c.cc.Invoke(ctx, "/user.DaoUser/UserSignInLogQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DaoUserServer is the server API for DaoUser service.
type DaoUserServer interface {
	// 用户注册函数
	UserDaoRegister(context.Context, *ReqUserRegister) (*emptypb.Empty, error)
	// 用户登录函数
	UserDaoLogin(context.Context, *ReqPasswordLogin) (*RspDaoUserLogin, error)
	// 用户详细信息获取函数
	UserDaoDetail(context.Context, *ReqDaoUserDetail) (*RspDaoUserDetail, error)
	// 用户详细信息修改函数
	UserDaoDetailUpdate(context.Context, *ReqDaoUserDetailUpdate) (*emptypb.Empty, error)
	// 用户修改密码
	UserDaoPwdUpdate(context.Context, *ReqDaoUserPwdUpdate) (*emptypb.Empty, error)
	// 根据id查询用户信息
	UserDaoById(context.Context, *ReqUserDaoById) (*RspUserDaoById, error)
	// 获取所有用户id
	UserDaoAll(context.Context, *emptypb.Empty) (*RspUserDaoAll, error)
	// 查询用户积分
	UserCoinDao(context.Context, *ReqUserCoinDao) (*RspUserCoinDao, error)
	// 添加用户积分消息费记录
	UserCoinLogAddDao(context.Context, *ReqUserCoinLogAddDao) (*emptypb.Empty, error)
	// 查询用户积分消费记录
	UserCoinLogQueryDao(context.Context, *ReqUserCoinLogQueryDao) (*RspUserCoinLogQueryDao, error)
	// 删除用户积分消费记录
	UserCoinLogDeleteDao(context.Context, *ReqUserCoinLogDeleteDao) (*emptypb.Empty, error)
	// 查询用户积分排名
	UserCoinRankQueryDao(context.Context, *ReqUserCoinRankQueryDao) (*RspUserCoinRankQueryDao, error)
	// 查询用户积分排行榜
	UserCoinRankBoardQueryDao(context.Context, *emptypb.Empty) (*RspUserCoinRankBoardQueryDao, error)
	// 用户签到
	UserSignInDao(context.Context, *ReqUserSignInDao) (*RspUserSignInDao, error)
	// 用户签到记录查询
	UserSignInLogQueryDao(context.Context, *ReqUserSignInLogQueryDao) (*RspUserSignInLogQueryDao, error)
}

// UnimplementedDaoUserServer can be embedded to have forward compatible implementations.
type UnimplementedDaoUserServer struct {
}

func (*UnimplementedDaoUserServer) UserDaoRegister(context.Context, *ReqUserRegister) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoRegister not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoLogin(context.Context, *ReqPasswordLogin) (*RspDaoUserLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoLogin not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoDetail(context.Context, *ReqDaoUserDetail) (*RspDaoUserDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoDetail not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoDetailUpdate(context.Context, *ReqDaoUserDetailUpdate) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoDetailUpdate not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoPwdUpdate(context.Context, *ReqDaoUserPwdUpdate) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoPwdUpdate not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoById(context.Context, *ReqUserDaoById) (*RspUserDaoById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoById not implemented")
}
func (*UnimplementedDaoUserServer) UserDaoAll(context.Context, *emptypb.Empty) (*RspUserDaoAll, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDaoAll not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinDao(context.Context, *ReqUserCoinDao) (*RspUserCoinDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinDao not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinLogAddDao(context.Context, *ReqUserCoinLogAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinLogAddDao not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinLogQueryDao(context.Context, *ReqUserCoinLogQueryDao) (*RspUserCoinLogQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinLogQueryDao not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinLogDeleteDao(context.Context, *ReqUserCoinLogDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinLogDeleteDao not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinRankQueryDao(context.Context, *ReqUserCoinRankQueryDao) (*RspUserCoinRankQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinRankQueryDao not implemented")
}
func (*UnimplementedDaoUserServer) UserCoinRankBoardQueryDao(context.Context, *emptypb.Empty) (*RspUserCoinRankBoardQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCoinRankBoardQueryDao not implemented")
}
func (*UnimplementedDaoUserServer) UserSignInDao(context.Context, *ReqUserSignInDao) (*RspUserSignInDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSignInDao not implemented")
}
func (*UnimplementedDaoUserServer) UserSignInLogQueryDao(context.Context, *ReqUserSignInLogQueryDao) (*RspUserSignInLogQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSignInLogQueryDao not implemented")
}

func RegisterDaoUserServer(s *grpc.Server, srv DaoUserServer) {
	s.RegisterService(&_DaoUser_serviceDesc, srv)
}

func _DaoUser_UserDaoRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoRegister(ctx, req.(*ReqUserRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPasswordLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoLogin(ctx, req.(*ReqPasswordLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDaoUserDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoDetail(ctx, req.(*ReqDaoUserDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoDetailUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDaoUserDetailUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoDetailUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoDetailUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoDetailUpdate(ctx, req.(*ReqDaoUserDetailUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoPwdUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDaoUserPwdUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoPwdUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoPwdUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoPwdUpdate(ctx, req.(*ReqDaoUserPwdUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserDaoById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoById(ctx, req.(*ReqUserDaoById))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserDaoAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserDaoAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserDaoAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserDaoAll(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserCoinDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinDao(ctx, req.(*ReqUserCoinDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinLogAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserCoinLogAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinLogAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinLogAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinLogAddDao(ctx, req.(*ReqUserCoinLogAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinLogQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserCoinLogQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinLogQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinLogQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinLogQueryDao(ctx, req.(*ReqUserCoinLogQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinLogDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserCoinLogDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinLogDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinLogDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinLogDeleteDao(ctx, req.(*ReqUserCoinLogDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinRankQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserCoinRankQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinRankQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinRankQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinRankQueryDao(ctx, req.(*ReqUserCoinRankQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserCoinRankBoardQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserCoinRankBoardQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserCoinRankBoardQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserCoinRankBoardQueryDao(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserSignInDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserSignInDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserSignInDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserSignInDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserSignInDao(ctx, req.(*ReqUserSignInDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoUser_UserSignInLogQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserSignInLogQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoUserServer).UserSignInLogQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoUser/UserSignInLogQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoUserServer).UserSignInLogQueryDao(ctx, req.(*ReqUserSignInLogQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

var _DaoUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.DaoUser",
	HandlerType: (*DaoUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserDaoRegister",
			Handler:    _DaoUser_UserDaoRegister_Handler,
		},
		{
			MethodName: "UserDaoLogin",
			Handler:    _DaoUser_UserDaoLogin_Handler,
		},
		{
			MethodName: "UserDaoDetail",
			Handler:    _DaoUser_UserDaoDetail_Handler,
		},
		{
			MethodName: "UserDaoDetailUpdate",
			Handler:    _DaoUser_UserDaoDetailUpdate_Handler,
		},
		{
			MethodName: "UserDaoPwdUpdate",
			Handler:    _DaoUser_UserDaoPwdUpdate_Handler,
		},
		{
			MethodName: "UserDaoById",
			Handler:    _DaoUser_UserDaoById_Handler,
		},
		{
			MethodName: "UserDaoAll",
			Handler:    _DaoUser_UserDaoAll_Handler,
		},
		{
			MethodName: "UserCoinDao",
			Handler:    _DaoUser_UserCoinDao_Handler,
		},
		{
			MethodName: "UserCoinLogAddDao",
			Handler:    _DaoUser_UserCoinLogAddDao_Handler,
		},
		{
			MethodName: "UserCoinLogQueryDao",
			Handler:    _DaoUser_UserCoinLogQueryDao_Handler,
		},
		{
			MethodName: "UserCoinLogDeleteDao",
			Handler:    _DaoUser_UserCoinLogDeleteDao_Handler,
		},
		{
			MethodName: "UserCoinRankQueryDao",
			Handler:    _DaoUser_UserCoinRankQueryDao_Handler,
		},
		{
			MethodName: "UserCoinRankBoardQueryDao",
			Handler:    _DaoUser_UserCoinRankBoardQueryDao_Handler,
		},
		{
			MethodName: "UserSignInDao",
			Handler:    _DaoUser_UserSignInDao_Handler,
		},
		{
			MethodName: "UserSignInLogQueryDao",
			Handler:    _DaoUser_UserSignInLogQueryDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
