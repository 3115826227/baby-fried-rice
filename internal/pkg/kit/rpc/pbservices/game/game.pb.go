// proto 文件版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: game.proto

// 生成文件的包名

package game

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameType int32

const (
	// 无效游戏类型
	GameType_InvalidGameType GameType = 0
	// 中国象棋人人对战
	GameType_ChinaChessManManGame GameType = 10000
	// 中国象棋人机对战简单版
	GameType_ChinaChessManMachineGame GameType = 10010
)

// Enum value maps for GameType.
var (
	GameType_name = map[int32]string{
		0:     "InvalidGameType",
		10000: "ChinaChessManManGame",
		10010: "ChinaChessManMachineGame",
	}
	GameType_value = map[string]int32{
		"InvalidGameType":          0,
		"ChinaChessManManGame":     10000,
		"ChinaChessManMachineGame": 10010,
	}
)

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}

func (x GameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[0].Descriptor()
}

func (GameType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[0]
}

func (x GameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameType.Descriptor instead.
func (GameType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

type GameResult int32

const (
	// 失败
	GameResult_Failed GameResult = 0
	// 胜利
	GameResult_Succeed GameResult = 1
)

// Enum value maps for GameResult.
var (
	GameResult_name = map[int32]string{
		0: "Failed",
		1: "Succeed",
	}
	GameResult_value = map[string]int32{
		"Failed":  0,
		"Succeed": 1,
	}
)

func (x GameResult) Enum() *GameResult {
	p := new(GameResult)
	*p = x
	return p
}

func (x GameResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameResult) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[1].Descriptor()
}

func (GameResult) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[1]
}

func (x GameResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameResult.Descriptor instead.
func (GameResult) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

type GameStatus int32

const (
	// 默认
	GameStatus_DefaultGameStatus GameStatus = 0
	// 进行中
	GameStatus_Progressing GameStatus = 1
	// 已结束
	GameStatus_Finished GameStatus = 2
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "DefaultGameStatus",
		1: "Progressing",
		2: "Finished",
	}
	GameStatus_value = map[string]int32{
		"DefaultGameStatus": 0,
		"Progressing":       1,
		"Finished":          2,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[2].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[2]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

type UserRole int32

const (
	// 旁观者
	UserRole_BystanderType UserRole = 0
	// 红方
	UserRole_RedType UserRole = 10
	// 黑方
	UserRole_BlackType UserRole = 11
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0:  "BystanderType",
		10: "RedType",
		11: "BlackType",
	}
	UserRole_value = map[string]int32{
		"BystanderType": 0,
		"RedType":       10,
		"BlackType":     11,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[3].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[3]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

type GameProcessDataAddResult int32

const (
	// 添加成功
	GameProcessDataAddResult_Success GameProcessDataAddResult = 0
	// 出现冲突
	GameProcessDataAddResult_Conflict GameProcessDataAddResult = 11
	// 未到操作回合
	GameProcessDataAddResult_NoOperatorRound GameProcessDataAddResult = 21
	// 操作无效
	GameProcessDataAddResult_OperatorInvalid GameProcessDataAddResult = 101
)

// Enum value maps for GameProcessDataAddResult.
var (
	GameProcessDataAddResult_name = map[int32]string{
		0:   "Success",
		11:  "Conflict",
		21:  "NoOperatorRound",
		101: "OperatorInvalid",
	}
	GameProcessDataAddResult_value = map[string]int32{
		"Success":         0,
		"Conflict":        11,
		"NoOperatorRound": 21,
		"OperatorInvalid": 101,
	}
)

func (x GameProcessDataAddResult) Enum() *GameProcessDataAddResult {
	p := new(GameProcessDataAddResult)
	*p = x
	return p
}

func (x GameProcessDataAddResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameProcessDataAddResult) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[4].Descriptor()
}

func (GameProcessDataAddResult) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[4]
}

func (x GameProcessDataAddResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameProcessDataAddResult.Descriptor instead.
func (GameProcessDataAddResult) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

type GameRecordUserDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 用户游戏对局结果
	GameResult GameResult `protobuf:"varint,2,opt,name=gameResult,proto3,enum=game.GameResult" json:"gameResult,omitempty"`
	UserRole   UserRole   `protobuf:"varint,3,opt,name=userRole,proto3,enum=game.UserRole" json:"userRole,omitempty"`
}

func (x *GameRecordUserDao) Reset() {
	*x = GameRecordUserDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRecordUserDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecordUserDao) ProtoMessage() {}

func (x *GameRecordUserDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecordUserDao.ProtoReflect.Descriptor instead.
func (*GameRecordUserDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameRecordUserDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GameRecordUserDao) GetGameResult() GameResult {
	if x != nil {
		return x.GameResult
	}
	return GameResult_Failed
}

func (x *GameRecordUserDao) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_BystanderType
}

type ReqGameRecordAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	// 游戏状态数据
	GameStatusData string `protobuf:"bytes,2,opt,name=gameStatusData,proto3" json:"gameStatusData,omitempty"`
	// 游戏状态
	GameStatus GameStatus `protobuf:"varint,3,opt,name=gameStatus,proto3,enum=game.GameStatus" json:"gameStatus,omitempty"`
	// 结束时间
	FinishTimestamp int64 `protobuf:"varint,4,opt,name=finishTimestamp,proto3" json:"finishTimestamp,omitempty"`
	// 对局的用户列表记录
	GameRecordUserList []*GameRecordUserDao `protobuf:"bytes,5,rep,name=gameRecordUserList,proto3" json:"gameRecordUserList,omitempty"`
}

func (x *ReqGameRecordAddDao) Reset() {
	*x = ReqGameRecordAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecordAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecordAddDao) ProtoMessage() {}

func (x *ReqGameRecordAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecordAddDao.ProtoReflect.Descriptor instead.
func (*ReqGameRecordAddDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *ReqGameRecordAddDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *ReqGameRecordAddDao) GetGameStatusData() string {
	if x != nil {
		return x.GameStatusData
	}
	return ""
}

func (x *ReqGameRecordAddDao) GetGameStatus() GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return GameStatus_DefaultGameStatus
}

func (x *ReqGameRecordAddDao) GetFinishTimestamp() int64 {
	if x != nil {
		return x.FinishTimestamp
	}
	return 0
}

func (x *ReqGameRecordAddDao) GetGameRecordUserList() []*GameRecordUserDao {
	if x != nil {
		return x.GameRecordUserList
	}
	return nil
}

type RspGameRecordAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId int64 `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
}

func (x *RspGameRecordAddDao) Reset() {
	*x = RspGameRecordAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGameRecordAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGameRecordAddDao) ProtoMessage() {}

func (x *RspGameRecordAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGameRecordAddDao.ProtoReflect.Descriptor instead.
func (*RspGameRecordAddDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

func (x *RspGameRecordAddDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

// 添加游戏进程数据
type ReqGameProcessAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId int64    `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
	GameType     GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	AccountId    string   `protobuf:"bytes,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 游戏进程数据
	GameProcessData string `protobuf:"bytes,4,opt,name=gameProcessData,proto3" json:"gameProcessData,omitempty"`
}

func (x *ReqGameProcessAddDao) Reset() {
	*x = ReqGameProcessAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameProcessAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameProcessAddDao) ProtoMessage() {}

func (x *ReqGameProcessAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameProcessAddDao.ProtoReflect.Descriptor instead.
func (*ReqGameProcessAddDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *ReqGameProcessAddDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

func (x *ReqGameProcessAddDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *ReqGameProcessAddDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqGameProcessAddDao) GetGameProcessData() string {
	if x != nil {
		return x.GameProcessData
	}
	return ""
}

type RspGameProcessAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 进程数据添加结果
	Result GameProcessDataAddResult `protobuf:"varint,1,opt,name=result,proto3,enum=game.GameProcessDataAddResult" json:"result,omitempty"`
	// 游戏状态数据
	GameStatusData string `protobuf:"bytes,2,opt,name=gameStatusData,proto3" json:"gameStatusData,omitempty"`
	// 游戏状态
	GameStatus GameStatus `protobuf:"varint,3,opt,name=gameStatus,proto3,enum=game.GameStatus" json:"gameStatus,omitempty"`
}

func (x *RspGameProcessAddDao) Reset() {
	*x = RspGameProcessAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGameProcessAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGameProcessAddDao) ProtoMessage() {}

func (x *RspGameProcessAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGameProcessAddDao.ProtoReflect.Descriptor instead.
func (*RspGameProcessAddDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *RspGameProcessAddDao) GetResult() GameProcessDataAddResult {
	if x != nil {
		return x.Result
	}
	return GameProcessDataAddResult_Success
}

func (x *RspGameProcessAddDao) GetGameStatusData() string {
	if x != nil {
		return x.GameStatusData
	}
	return ""
}

func (x *RspGameProcessAddDao) GetGameStatus() GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return GameStatus_DefaultGameStatus
}

// 查询游戏状态数据
type ReqGameStatusQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId int64    `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
	GameType     GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	AccountId    string   `protobuf:"bytes,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqGameStatusQueryDao) Reset() {
	*x = ReqGameStatusQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameStatusQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameStatusQueryDao) ProtoMessage() {}

func (x *ReqGameStatusQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameStatusQueryDao.ProtoReflect.Descriptor instead.
func (*ReqGameStatusQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *ReqGameStatusQueryDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

func (x *ReqGameStatusQueryDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *ReqGameStatusQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspGameStatusQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游戏状态数据
	GameStatusData string `protobuf:"bytes,1,opt,name=gameStatusData,proto3" json:"gameStatusData,omitempty"`
	// 游戏状态
	GameStatus GameStatus `protobuf:"varint,2,opt,name=gameStatus,proto3,enum=game.GameStatus" json:"gameStatus,omitempty"`
	// 查询玩家角色
	UserRole UserRole `protobuf:"varint,4,opt,name=userRole,proto3,enum=game.UserRole" json:"userRole,omitempty"`
}

func (x *RspGameStatusQueryDao) Reset() {
	*x = RspGameStatusQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGameStatusQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGameStatusQueryDao) ProtoMessage() {}

func (x *RspGameStatusQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGameStatusQueryDao.ProtoReflect.Descriptor instead.
func (*RspGameStatusQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *RspGameStatusQueryDao) GetGameStatusData() string {
	if x != nil {
		return x.GameStatusData
	}
	return ""
}

func (x *RspGameStatusQueryDao) GetGameStatus() GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return GameStatus_DefaultGameStatus
}

func (x *RspGameStatusQueryDao) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_BystanderType
}

// 查询游戏的个人对局记录
type ReqGameRecordQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游戏类型
	GameType  GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	AccountId string   `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Page      int64    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64    `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ReqGameRecordQueryDao) Reset() {
	*x = ReqGameRecordQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecordQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecordQueryDao) ProtoMessage() {}

func (x *ReqGameRecordQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecordQueryDao.ProtoReflect.Descriptor instead.
func (*ReqGameRecordQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGameRecordQueryDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *ReqGameRecordQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqGameRecordQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGameRecordQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GameRecordQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId    int64      `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
	GameType        GameType   `protobuf:"varint,2,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	GameResult      GameResult `protobuf:"varint,3,opt,name=gameResult,proto3,enum=game.GameResult" json:"gameResult,omitempty"`
	GameStatus      GameStatus `protobuf:"varint,4,opt,name=gameStatus,proto3,enum=game.GameStatus" json:"gameStatus,omitempty"`
	FinishTimestamp int64      `protobuf:"varint,5,opt,name=finishTimestamp,proto3" json:"finishTimestamp,omitempty"`
	UserRole        UserRole   `protobuf:"varint,6,opt,name=userRole,proto3,enum=game.UserRole" json:"userRole,omitempty"`
}

func (x *GameRecordQueryDao) Reset() {
	*x = GameRecordQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRecordQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecordQueryDao) ProtoMessage() {}

func (x *GameRecordQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecordQueryDao.ProtoReflect.Descriptor instead.
func (*GameRecordQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *GameRecordQueryDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

func (x *GameRecordQueryDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *GameRecordQueryDao) GetGameResult() GameResult {
	if x != nil {
		return x.GameResult
	}
	return GameResult_Failed
}

func (x *GameRecordQueryDao) GetGameStatus() GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return GameStatus_DefaultGameStatus
}

func (x *GameRecordQueryDao) GetFinishTimestamp() int64 {
	if x != nil {
		return x.FinishTimestamp
	}
	return 0
}

func (x *GameRecordQueryDao) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_BystanderType
}

type RspGameRecordQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*GameRecordQueryDao `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int64                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64                 `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RspGameRecordQueryDao) Reset() {
	*x = RspGameRecordQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGameRecordQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGameRecordQueryDao) ProtoMessage() {}

func (x *RspGameRecordQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGameRecordQueryDao.ProtoReflect.Descriptor instead.
func (*RspGameRecordQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

func (x *RspGameRecordQueryDao) GetList() []*GameRecordQueryDao {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RspGameRecordQueryDao) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RspGameRecordQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspGameRecordQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 查询游戏的详情记录
type ReqGameRecordDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId int64    `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
	GameType     GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
}

func (x *ReqGameRecordDetailQueryDao) Reset() {
	*x = ReqGameRecordDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecordDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecordDetailQueryDao) ProtoMessage() {}

func (x *ReqGameRecordDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecordDetailQueryDao.ProtoReflect.Descriptor instead.
func (*ReqGameRecordDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

func (x *ReqGameRecordDetailQueryDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

func (x *ReqGameRecordDetailQueryDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

type RspGameRecordDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRecordId int64    `protobuf:"varint,1,opt,name=gameRecordId,proto3" json:"gameRecordId,omitempty"`
	GameType     GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=game.GameType" json:"gameType,omitempty"`
	// 游戏状态数据
	GameStatusData string `protobuf:"bytes,3,opt,name=gameStatusData,proto3" json:"gameStatusData,omitempty"`
	// 游戏进程数据
	GameProcessDao string `protobuf:"bytes,4,opt,name=gameProcessDao,proto3" json:"gameProcessDao,omitempty"`
	// 游戏状态
	GameStatus GameStatus `protobuf:"varint,5,opt,name=gameStatus,proto3,enum=game.GameStatus" json:"gameStatus,omitempty"`
	// 结束时间
	FinishTimestamp int64 `protobuf:"varint,6,opt,name=finishTimestamp,proto3" json:"finishTimestamp,omitempty"`
	// 对局的用户列表记录
	GameRecordUserList []*GameRecordUserDao `protobuf:"bytes,7,rep,name=gameRecordUserList,proto3" json:"gameRecordUserList,omitempty"`
}

func (x *RspGameRecordDetailQueryDao) Reset() {
	*x = RspGameRecordDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGameRecordDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGameRecordDetailQueryDao) ProtoMessage() {}

func (x *RspGameRecordDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGameRecordDetailQueryDao.ProtoReflect.Descriptor instead.
func (*RspGameRecordDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *RspGameRecordDetailQueryDao) GetGameRecordId() int64 {
	if x != nil {
		return x.GameRecordId
	}
	return 0
}

func (x *RspGameRecordDetailQueryDao) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_InvalidGameType
}

func (x *RspGameRecordDetailQueryDao) GetGameStatusData() string {
	if x != nil {
		return x.GameStatusData
	}
	return ""
}

func (x *RspGameRecordDetailQueryDao) GetGameProcessDao() string {
	if x != nil {
		return x.GameProcessDao
	}
	return ""
}

func (x *RspGameRecordDetailQueryDao) GetGameStatus() GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return GameStatus_DefaultGameStatus
}

func (x *RspGameRecordDetailQueryDao) GetFinishTimestamp() int64 {
	if x != nil {
		return x.FinishTimestamp
	}
	return 0
}

func (x *RspGameRecordDetailQueryDao) GetGameRecordUserList() []*GameRecordUserDao {
	if x != nil {
		return x.GameRecordUserList
	}
	return nil
}

var File_game_proto protoreflect.FileDescriptor

var file_game_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61,
	0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x2a, 0x0a, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x47, 0x0a, 0x12,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x6f, 0x52, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x13, 0x52, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x22, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x22, 0xae, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x52, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x15, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x52, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x26,
	0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x2a,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x52, 0x73,
	0x70, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6d, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x1b, 0x52, 0x73, 0x70, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x44, 0x61, 0x6f, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x6f, 0x52, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x59, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x14,
	0x43, 0x68, 0x69, 0x6e, 0x61, 0x43, 0x68, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x4d, 0x61, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x10, 0x90, 0x4e, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x68, 0x69, 0x6e, 0x61,
	0x43, 0x68, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x10, 0x9a, 0x4e, 0x2a, 0x25, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x42, 0x0a,
	0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10,
	0x02, 0x2a, 0x39, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x42, 0x79, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0b, 0x2a, 0x5f, 0x0a, 0x18,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x65, 0x32, 0xa2, 0x03,
	0x0a, 0x07, 0x44, 0x61, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x52, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x64,
	0x64, 0x44, 0x61, 0x6f, 0x1a, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f,
	0x12, 0x4e, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x12, 0x4e, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x12, 0x60, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x21, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a,
	0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x42, 0x36, 0x5a, 0x34, 0x62, 0x61, 0x62, 0x79, 0x2d, 0x66, 0x72, 0x69, 0x65, 0x64,
	0x2d, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData = file_game_proto_rawDesc
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_proto_rawDescData)
	})
	return file_game_proto_rawDescData
}

var file_game_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_game_proto_goTypes = []interface{}{
	(GameType)(0),                       // 0: game.GameType
	(GameResult)(0),                     // 1: game.GameResult
	(GameStatus)(0),                     // 2: game.GameStatus
	(UserRole)(0),                       // 3: game.UserRole
	(GameProcessDataAddResult)(0),       // 4: game.GameProcessDataAddResult
	(*GameRecordUserDao)(nil),           // 5: game.GameRecordUserDao
	(*ReqGameRecordAddDao)(nil),         // 6: game.ReqGameRecordAddDao
	(*RspGameRecordAddDao)(nil),         // 7: game.RspGameRecordAddDao
	(*ReqGameProcessAddDao)(nil),        // 8: game.ReqGameProcessAddDao
	(*RspGameProcessAddDao)(nil),        // 9: game.RspGameProcessAddDao
	(*ReqGameStatusQueryDao)(nil),       // 10: game.ReqGameStatusQueryDao
	(*RspGameStatusQueryDao)(nil),       // 11: game.RspGameStatusQueryDao
	(*ReqGameRecordQueryDao)(nil),       // 12: game.ReqGameRecordQueryDao
	(*GameRecordQueryDao)(nil),          // 13: game.GameRecordQueryDao
	(*RspGameRecordQueryDao)(nil),       // 14: game.RspGameRecordQueryDao
	(*ReqGameRecordDetailQueryDao)(nil), // 15: game.ReqGameRecordDetailQueryDao
	(*RspGameRecordDetailQueryDao)(nil), // 16: game.RspGameRecordDetailQueryDao
}
var file_game_proto_depIdxs = []int32{
	1,  // 0: game.GameRecordUserDao.gameResult:type_name -> game.GameResult
	3,  // 1: game.GameRecordUserDao.userRole:type_name -> game.UserRole
	0,  // 2: game.ReqGameRecordAddDao.gameType:type_name -> game.GameType
	2,  // 3: game.ReqGameRecordAddDao.gameStatus:type_name -> game.GameStatus
	5,  // 4: game.ReqGameRecordAddDao.gameRecordUserList:type_name -> game.GameRecordUserDao
	0,  // 5: game.ReqGameProcessAddDao.gameType:type_name -> game.GameType
	4,  // 6: game.RspGameProcessAddDao.result:type_name -> game.GameProcessDataAddResult
	2,  // 7: game.RspGameProcessAddDao.gameStatus:type_name -> game.GameStatus
	0,  // 8: game.ReqGameStatusQueryDao.gameType:type_name -> game.GameType
	2,  // 9: game.RspGameStatusQueryDao.gameStatus:type_name -> game.GameStatus
	3,  // 10: game.RspGameStatusQueryDao.userRole:type_name -> game.UserRole
	0,  // 11: game.ReqGameRecordQueryDao.gameType:type_name -> game.GameType
	0,  // 12: game.GameRecordQueryDao.gameType:type_name -> game.GameType
	1,  // 13: game.GameRecordQueryDao.gameResult:type_name -> game.GameResult
	2,  // 14: game.GameRecordQueryDao.gameStatus:type_name -> game.GameStatus
	3,  // 15: game.GameRecordQueryDao.userRole:type_name -> game.UserRole
	13, // 16: game.RspGameRecordQueryDao.list:type_name -> game.GameRecordQueryDao
	0,  // 17: game.ReqGameRecordDetailQueryDao.gameType:type_name -> game.GameType
	0,  // 18: game.RspGameRecordDetailQueryDao.gameType:type_name -> game.GameType
	2,  // 19: game.RspGameRecordDetailQueryDao.gameStatus:type_name -> game.GameStatus
	5,  // 20: game.RspGameRecordDetailQueryDao.gameRecordUserList:type_name -> game.GameRecordUserDao
	6,  // 21: game.DaoGame.GameRecordAddDao:input_type -> game.ReqGameRecordAddDao
	8,  // 22: game.DaoGame.GameProcessAddDao:input_type -> game.ReqGameProcessAddDao
	10, // 23: game.DaoGame.GameStatusQueryDao:input_type -> game.ReqGameStatusQueryDao
	12, // 24: game.DaoGame.GameRecordQueryDao:input_type -> game.ReqGameRecordQueryDao
	15, // 25: game.DaoGame.GameRecordDetailQueryDao:input_type -> game.ReqGameRecordDetailQueryDao
	7,  // 26: game.DaoGame.GameRecordAddDao:output_type -> game.RspGameRecordAddDao
	9,  // 27: game.DaoGame.GameProcessAddDao:output_type -> game.RspGameProcessAddDao
	11, // 28: game.DaoGame.GameStatusQueryDao:output_type -> game.RspGameStatusQueryDao
	14, // 29: game.DaoGame.GameRecordQueryDao:output_type -> game.RspGameRecordQueryDao
	16, // 30: game.DaoGame.GameRecordDetailQueryDao:output_type -> game.RspGameRecordDetailQueryDao
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRecordUserDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecordAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGameRecordAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameProcessAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGameProcessAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameStatusQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGameStatusQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecordQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRecordQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGameRecordQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecordDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGameRecordDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		EnumInfos:         file_game_proto_enumTypes,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_rawDesc = nil
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DaoGameClient is the client API for DaoGame service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DaoGameClient interface {
	// 添加游戏对局
	GameRecordAddDao(ctx context.Context, in *ReqGameRecordAddDao, opts ...grpc.CallOption) (*RspGameRecordAddDao, error)
	// 添加游戏进程数据
	GameProcessAddDao(ctx context.Context, in *ReqGameProcessAddDao, opts ...grpc.CallOption) (*RspGameProcessAddDao, error)
	// 查询游戏状态数据
	GameStatusQueryDao(ctx context.Context, in *ReqGameStatusQueryDao, opts ...grpc.CallOption) (*RspGameStatusQueryDao, error)
	// 查询游戏的个人对局记录
	GameRecordQueryDao(ctx context.Context, in *ReqGameRecordQueryDao, opts ...grpc.CallOption) (*RspGameRecordQueryDao, error)
	// 查询游戏的详情记录
	GameRecordDetailQueryDao(ctx context.Context, in *ReqGameRecordDetailQueryDao, opts ...grpc.CallOption) (*RspGameRecordDetailQueryDao, error)
}

type daoGameClient struct {
	cc grpc.ClientConnInterface
}

func NewDaoGameClient(cc grpc.ClientConnInterface) DaoGameClient {
	return &daoGameClient{cc}
}

func (c *daoGameClient) GameRecordAddDao(ctx context.Context, in *ReqGameRecordAddDao, opts ...grpc.CallOption) (*RspGameRecordAddDao, error) {
	out := new(RspGameRecordAddDao)
	err := c.cc.Invoke(ctx, "/game.DaoGame/GameRecordAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoGameClient) GameProcessAddDao(ctx context.Context, in *ReqGameProcessAddDao, opts ...grpc.CallOption) (*RspGameProcessAddDao, error) {
	out := new(RspGameProcessAddDao)
	err := c.cc.Invoke(ctx, "/game.DaoGame/GameProcessAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoGameClient) GameStatusQueryDao(ctx context.Context, in *ReqGameStatusQueryDao, opts ...grpc.CallOption) (*RspGameStatusQueryDao, error) {
	out := new(RspGameStatusQueryDao)
	err := c.cc.Invoke(ctx, "/game.DaoGame/GameStatusQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoGameClient) GameRecordQueryDao(ctx context.Context, in *ReqGameRecordQueryDao, opts ...grpc.CallOption) (*RspGameRecordQueryDao, error) {
	out := new(RspGameRecordQueryDao)
	err := c.cc.Invoke(ctx, "/game.DaoGame/GameRecordQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoGameClient) GameRecordDetailQueryDao(ctx context.Context, in *ReqGameRecordDetailQueryDao, opts ...grpc.CallOption) (*RspGameRecordDetailQueryDao, error) {
	out := new(RspGameRecordDetailQueryDao)
	err := c.cc.Invoke(ctx, "/game.DaoGame/GameRecordDetailQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DaoGameServer is the server API for DaoGame service.
type DaoGameServer interface {
	// 添加游戏对局
	GameRecordAddDao(context.Context, *ReqGameRecordAddDao) (*RspGameRecordAddDao, error)
	// 添加游戏进程数据
	GameProcessAddDao(context.Context, *ReqGameProcessAddDao) (*RspGameProcessAddDao, error)
	// 查询游戏状态数据
	GameStatusQueryDao(context.Context, *ReqGameStatusQueryDao) (*RspGameStatusQueryDao, error)
	// 查询游戏的个人对局记录
	GameRecordQueryDao(context.Context, *ReqGameRecordQueryDao) (*RspGameRecordQueryDao, error)
	// 查询游戏的详情记录
	GameRecordDetailQueryDao(context.Context, *ReqGameRecordDetailQueryDao) (*RspGameRecordDetailQueryDao, error)
}

// UnimplementedDaoGameServer can be embedded to have forward compatible implementations.
type UnimplementedDaoGameServer struct {
}

func (*UnimplementedDaoGameServer) GameRecordAddDao(context.Context, *ReqGameRecordAddDao) (*RspGameRecordAddDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameRecordAddDao not implemented")
}
func (*UnimplementedDaoGameServer) GameProcessAddDao(context.Context, *ReqGameProcessAddDao) (*RspGameProcessAddDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameProcessAddDao not implemented")
}
func (*UnimplementedDaoGameServer) GameStatusQueryDao(context.Context, *ReqGameStatusQueryDao) (*RspGameStatusQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameStatusQueryDao not implemented")
}
func (*UnimplementedDaoGameServer) GameRecordQueryDao(context.Context, *ReqGameRecordQueryDao) (*RspGameRecordQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameRecordQueryDao not implemented")
}
func (*UnimplementedDaoGameServer) GameRecordDetailQueryDao(context.Context, *ReqGameRecordDetailQueryDao) (*RspGameRecordDetailQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameRecordDetailQueryDao not implemented")
}

func RegisterDaoGameServer(s *grpc.Server, srv DaoGameServer) {
	s.RegisterService(&_DaoGame_serviceDesc, srv)
}

func _DaoGame_GameRecordAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoGameServer).GameRecordAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.DaoGame/GameRecordAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoGameServer).GameRecordAddDao(ctx, req.(*ReqGameRecordAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoGame_GameProcessAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameProcessAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoGameServer).GameProcessAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.DaoGame/GameProcessAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoGameServer).GameProcessAddDao(ctx, req.(*ReqGameProcessAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoGame_GameStatusQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameStatusQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoGameServer).GameStatusQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.DaoGame/GameStatusQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoGameServer).GameStatusQueryDao(ctx, req.(*ReqGameStatusQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoGame_GameRecordQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoGameServer).GameRecordQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.DaoGame/GameRecordQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoGameServer).GameRecordQueryDao(ctx, req.(*ReqGameRecordQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoGame_GameRecordDetailQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordDetailQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoGameServer).GameRecordDetailQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.DaoGame/GameRecordDetailQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoGameServer).GameRecordDetailQueryDao(ctx, req.(*ReqGameRecordDetailQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

var _DaoGame_serviceDesc = grpc.ServiceDesc{
	ServiceName: "game.DaoGame",
	HandlerType: (*DaoGameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameRecordAddDao",
			Handler:    _DaoGame_GameRecordAddDao_Handler,
		},
		{
			MethodName: "GameProcessAddDao",
			Handler:    _DaoGame_GameProcessAddDao_Handler,
		},
		{
			MethodName: "GameStatusQueryDao",
			Handler:    _DaoGame_GameStatusQueryDao_Handler,
		},
		{
			MethodName: "GameRecordQueryDao",
			Handler:    _DaoGame_GameRecordQueryDao_Handler,
		},
		{
			MethodName: "GameRecordDetailQueryDao",
			Handler:    _DaoGame_GameRecordDetailQueryDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "game.proto",
}
