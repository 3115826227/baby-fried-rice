// proto 文件版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: blog.proto

// 生成文件的包名

package blog

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlogStatus int32

const (
	// 未发布
	BlogStatus_Unpublished BlogStatus = 0
	// 待审核
	BlogStatus_PendingReview BlogStatus = 1
	// 已发布
	BlogStatus_Published BlogStatus = 2
)

// Enum value maps for BlogStatus.
var (
	BlogStatus_name = map[int32]string{
		0: "Unpublished",
		1: "PendingReview",
		2: "Published",
	}
	BlogStatus_value = map[string]int32{
		"Unpublished":   0,
		"PendingReview": 1,
		"Published":     2,
	}
)

func (x BlogStatus) Enum() *BlogStatus {
	p := new(BlogStatus)
	*p = x
	return p
}

func (x BlogStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlogStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_blog_proto_enumTypes[0].Descriptor()
}

func (BlogStatus) Type() protoreflect.EnumType {
	return &file_blog_proto_enumTypes[0]
}

func (x BlogStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlogStatus.Descriptor instead.
func (BlogStatus) EnumDescriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{0}
}

type QueryType int32

const (
	QueryType_NewType      QueryType = 0
	QueryType_ReadMostType QueryType = 1
	QueryType_LikeMostType QueryType = 2
)

// Enum value maps for QueryType.
var (
	QueryType_name = map[int32]string{
		0: "NewType",
		1: "ReadMostType",
		2: "LikeMostType",
	}
	QueryType_value = map[string]int32{
		"NewType":      0,
		"ReadMostType": 1,
		"LikeMostType": 2,
	}
)

func (x QueryType) Enum() *QueryType {
	p := new(QueryType)
	*p = x
	return p
}

func (x QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_blog_proto_enumTypes[1].Descriptor()
}

func (QueryType) Type() protoreflect.EnumType {
	return &file_blog_proto_enumTypes[1]
}

func (x QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryType.Descriptor instead.
func (QueryType) EnumDescriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{1}
}

// 添加标签
type ReqTagAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Tags   []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ReqTagAddDao) Reset() {
	*x = ReqTagAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTagAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTagAddDao) ProtoMessage() {}

func (x *ReqTagAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTagAddDao.ProtoReflect.Descriptor instead.
func (*ReqTagAddDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{0}
}

func (x *ReqTagAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqTagAddDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// 查询标签
type ReqTagQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ReqTagQueryDao) Reset() {
	*x = ReqTagQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTagQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTagQueryDao) ProtoMessage() {}

func (x *ReqTagQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTagQueryDao.ProtoReflect.Descriptor instead.
func (*ReqTagQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{1}
}

func (x *ReqTagQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type RspTagQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Tags   []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RspTagQueryDao) Reset() {
	*x = RspTagQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspTagQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspTagQueryDao) ProtoMessage() {}

func (x *RspTagQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspTagQueryDao.ProtoReflect.Descriptor instead.
func (*RspTagQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{2}
}

func (x *RspTagQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *RspTagQueryDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// 删除标签
type ReqTagDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Tags   []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ReqTagDeleteDao) Reset() {
	*x = ReqTagDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTagDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTagDeleteDao) ProtoMessage() {}

func (x *ReqTagDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTagDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqTagDeleteDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{3}
}

func (x *ReqTagDeleteDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqTagDeleteDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// 添加分类
type ReqCategoryAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *ReqCategoryAddDao) Reset() {
	*x = ReqCategoryAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCategoryAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCategoryAddDao) ProtoMessage() {}

func (x *ReqCategoryAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCategoryAddDao.ProtoReflect.Descriptor instead.
func (*ReqCategoryAddDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{4}
}

func (x *ReqCategoryAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqCategoryAddDao) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

// 查询分类
type ReqCategoryQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ReqCategoryQueryDao) Reset() {
	*x = ReqCategoryQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCategoryQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCategoryQueryDao) ProtoMessage() {}

func (x *ReqCategoryQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCategoryQueryDao.ProtoReflect.Descriptor instead.
func (*ReqCategoryQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{5}
}

func (x *ReqCategoryQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type RspCategoryQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Category []string `protobuf:"bytes,2,rep,name=category,proto3" json:"category,omitempty"`
}

func (x *RspCategoryQueryDao) Reset() {
	*x = RspCategoryQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspCategoryQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspCategoryQueryDao) ProtoMessage() {}

func (x *RspCategoryQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspCategoryQueryDao.ProtoReflect.Descriptor instead.
func (*RspCategoryQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{6}
}

func (x *RspCategoryQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *RspCategoryQueryDao) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

// 删除分类
type ReqCategoryDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *ReqCategoryDeleteDao) Reset() {
	*x = ReqCategoryDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCategoryDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCategoryDeleteDao) ProtoMessage() {}

func (x *ReqCategoryDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCategoryDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqCategoryDeleteDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{7}
}

func (x *ReqCategoryDeleteDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqCategoryDeleteDao) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

// 关注博主
type ReqFocusAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作用户
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// 博主
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// true-关注 false-取关
	Focus bool `protobuf:"varint,3,opt,name=focus,proto3" json:"focus,omitempty"`
}

func (x *ReqFocusAddDao) Reset() {
	*x = ReqFocusAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFocusAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFocusAddDao) ProtoMessage() {}

func (x *ReqFocusAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFocusAddDao.ProtoReflect.Descriptor instead.
func (*ReqFocusAddDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{8}
}

func (x *ReqFocusAddDao) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqFocusAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqFocusAddDao) GetFocus() bool {
	if x != nil {
		return x.Focus
	}
	return false
}

// 喜欢博文
type ReqBlogLikeAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作用户
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// 博文
	BlogId string `protobuf:"bytes,2,opt,name=blogId,proto3" json:"blogId,omitempty"`
	// true-喜欢 false-取消喜欢
	Like bool `protobuf:"varint,3,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *ReqBlogLikeAddDao) Reset() {
	*x = ReqBlogLikeAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogLikeAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogLikeAddDao) ProtoMessage() {}

func (x *ReqBlogLikeAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogLikeAddDao.ProtoReflect.Descriptor instead.
func (*ReqBlogLikeAddDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{9}
}

func (x *ReqBlogLikeAddDao) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqBlogLikeAddDao) GetBlogId() string {
	if x != nil {
		return x.BlogId
	}
	return ""
}

func (x *ReqBlogLikeAddDao) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

// 查询粉丝
type ReqFansQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blogger  string `protobuf:"bytes,1,opt,name=blogger,proto3" json:"blogger,omitempty"`
	Page     int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ReqFansQueryDao) Reset() {
	*x = ReqFansQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFansQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFansQueryDao) ProtoMessage() {}

func (x *ReqFansQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFansQueryDao.ProtoReflect.Descriptor instead.
func (*ReqFansQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{10}
}

func (x *ReqFansQueryDao) GetBlogger() string {
	if x != nil {
		return x.Blogger
	}
	return ""
}

func (x *ReqFansQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqFansQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RspFansQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users    []string `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Page     int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int64    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RspFansQueryDao) Reset() {
	*x = RspFansQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspFansQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspFansQueryDao) ProtoMessage() {}

func (x *RspFansQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspFansQueryDao.ProtoReflect.Descriptor instead.
func (*RspFansQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{11}
}

func (x *RspFansQueryDao) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *RspFansQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspFansQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RspFansQueryDao) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 添加博文
type ReqBlogAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin         string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Title          string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags           []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Category       string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	PreviewContent string   `protobuf:"bytes,5,opt,name=previewContent,proto3" json:"previewContent,omitempty"`
}

func (x *ReqBlogAddDao) Reset() {
	*x = ReqBlogAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogAddDao) ProtoMessage() {}

func (x *ReqBlogAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogAddDao.ProtoReflect.Descriptor instead.
func (*ReqBlogAddDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{12}
}

func (x *ReqBlogAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqBlogAddDao) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqBlogAddDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReqBlogAddDao) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ReqBlogAddDao) GetPreviewContent() string {
	if x != nil {
		return x.PreviewContent
	}
	return ""
}

// 更新博文
type ReqBlogUpdateDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   string     `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	BlogId   string     `protobuf:"bytes,2,opt,name=blogId,proto3" json:"blogId,omitempty"`
	Title    string     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Tags     []string   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Category string     `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Status   BlogStatus `protobuf:"varint,6,opt,name=status,proto3,enum=blog.BlogStatus" json:"status,omitempty"`
	// 预览内容
	PreviewContent string `protobuf:"bytes,7,opt,name=previewContent,proto3" json:"previewContent,omitempty"`
}

func (x *ReqBlogUpdateDao) Reset() {
	*x = ReqBlogUpdateDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogUpdateDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogUpdateDao) ProtoMessage() {}

func (x *ReqBlogUpdateDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogUpdateDao.ProtoReflect.Descriptor instead.
func (*ReqBlogUpdateDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{13}
}

func (x *ReqBlogUpdateDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqBlogUpdateDao) GetBlogId() string {
	if x != nil {
		return x.BlogId
	}
	return ""
}

func (x *ReqBlogUpdateDao) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqBlogUpdateDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReqBlogUpdateDao) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ReqBlogUpdateDao) GetStatus() BlogStatus {
	if x != nil {
		return x.Status
	}
	return BlogStatus_Unpublished
}

func (x *ReqBlogUpdateDao) GetPreviewContent() string {
	if x != nil {
		return x.PreviewContent
	}
	return ""
}

// 删除博文
type ReqBlogDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin  string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	BlogIds []string `protobuf:"bytes,2,rep,name=blogIds,proto3" json:"blogIds,omitempty"`
}

func (x *ReqBlogDeleteDao) Reset() {
	*x = ReqBlogDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogDeleteDao) ProtoMessage() {}

func (x *ReqBlogDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqBlogDeleteDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{14}
}

func (x *ReqBlogDeleteDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqBlogDeleteDao) GetBlogIds() []string {
	if x != nil {
		return x.BlogIds
	}
	return nil
}

// 查询博主信息
type ReqBloggerQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blogger string `protobuf:"bytes,1,opt,name=blogger,proto3" json:"blogger,omitempty"`
}

func (x *ReqBloggerQueryDao) Reset() {
	*x = ReqBloggerQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBloggerQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBloggerQueryDao) ProtoMessage() {}

func (x *ReqBloggerQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBloggerQueryDao.ProtoReflect.Descriptor instead.
func (*ReqBloggerQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{15}
}

func (x *ReqBloggerQueryDao) GetBlogger() string {
	if x != nil {
		return x.Blogger
	}
	return ""
}

type RspBloggerQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blogger string `protobuf:"bytes,1,opt,name=blogger,proto3" json:"blogger,omitempty"`
	// 标签列表
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// 博文数
	BlogTotal int64 `protobuf:"varint,3,opt,name=blogTotal,proto3" json:"blogTotal,omitempty"`
	// 总点赞数
	LikeTotal int64 `protobuf:"varint,4,opt,name=likeTotal,proto3" json:"likeTotal,omitempty"`
	// 总阅读数
	ReadTotal int64 `protobuf:"varint,5,opt,name=readTotal,proto3" json:"readTotal,omitempty"`
	// 粉丝数
	FansTotal int64 `protobuf:"varint,6,opt,name=fansTotal,proto3" json:"fansTotal,omitempty"`
}

func (x *RspBloggerQueryDao) Reset() {
	*x = RspBloggerQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBloggerQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBloggerQueryDao) ProtoMessage() {}

func (x *RspBloggerQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBloggerQueryDao.ProtoReflect.Descriptor instead.
func (*RspBloggerQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{16}
}

func (x *RspBloggerQueryDao) GetBlogger() string {
	if x != nil {
		return x.Blogger
	}
	return ""
}

func (x *RspBloggerQueryDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RspBloggerQueryDao) GetBlogTotal() int64 {
	if x != nil {
		return x.BlogTotal
	}
	return 0
}

func (x *RspBloggerQueryDao) GetLikeTotal() int64 {
	if x != nil {
		return x.LikeTotal
	}
	return 0
}

func (x *RspBloggerQueryDao) GetReadTotal() int64 {
	if x != nil {
		return x.ReadTotal
	}
	return 0
}

func (x *RspBloggerQueryDao) GetFansTotal() int64 {
	if x != nil {
		return x.FansTotal
	}
	return 0
}

// 查询博文列表
type ReqBlogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关键词模糊搜索
	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	// 博主名称模糊搜索
	BloggerLike string `protobuf:"bytes,2,opt,name=bloggerLike,proto3" json:"bloggerLike,omitempty"`
	// 查询方式
	QueryType QueryType `protobuf:"varint,3,opt,name=queryType,proto3,enum=blog.QueryType" json:"queryType,omitempty"`
	Page      int64     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64     `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ReqBlogQueryDao) Reset() {
	*x = ReqBlogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogQueryDao) ProtoMessage() {}

func (x *ReqBlogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogQueryDao.ProtoReflect.Descriptor instead.
func (*ReqBlogQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{17}
}

func (x *ReqBlogQueryDao) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ReqBlogQueryDao) GetBloggerLike() string {
	if x != nil {
		return x.BloggerLike
	}
	return ""
}

func (x *ReqBlogQueryDao) GetQueryType() QueryType {
	if x != nil {
		return x.QueryType
	}
	return QueryType_NewType
}

func (x *ReqBlogQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqBlogQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BlogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blogger        string   `protobuf:"bytes,1,opt,name=blogger,proto3" json:"blogger,omitempty"`
	BlogId         string   `protobuf:"bytes,2,opt,name=blogId,proto3" json:"blogId,omitempty"`
	Title          string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Tags           []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Category       string   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	PreviewContent string   `protobuf:"bytes,6,opt,name=previewContent,proto3" json:"previewContent,omitempty"`
	LikeTotal      int64    `protobuf:"varint,7,opt,name=likeTotal,proto3" json:"likeTotal,omitempty"`
	ReadTotal      int64    `protobuf:"varint,8,opt,name=readTotal,proto3" json:"readTotal,omitempty"`
	CommentTotal   int64    `protobuf:"varint,9,opt,name=commentTotal,proto3" json:"commentTotal,omitempty"`
	Timestamp      int64    `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BlogQueryDao) Reset() {
	*x = BlogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogQueryDao) ProtoMessage() {}

func (x *BlogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogQueryDao.ProtoReflect.Descriptor instead.
func (*BlogQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{18}
}

func (x *BlogQueryDao) GetBlogger() string {
	if x != nil {
		return x.Blogger
	}
	return ""
}

func (x *BlogQueryDao) GetBlogId() string {
	if x != nil {
		return x.BlogId
	}
	return ""
}

func (x *BlogQueryDao) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlogQueryDao) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BlogQueryDao) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *BlogQueryDao) GetPreviewContent() string {
	if x != nil {
		return x.PreviewContent
	}
	return ""
}

func (x *BlogQueryDao) GetLikeTotal() int64 {
	if x != nil {
		return x.LikeTotal
	}
	return 0
}

func (x *BlogQueryDao) GetReadTotal() int64 {
	if x != nil {
		return x.ReadTotal
	}
	return 0
}

func (x *BlogQueryDao) GetCommentTotal() int64 {
	if x != nil {
		return x.CommentTotal
	}
	return 0
}

func (x *BlogQueryDao) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RspBlogQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*BlogQueryDao `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Page     int64           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64           `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int64           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RspBlogQueryDao) Reset() {
	*x = RspBlogQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBlogQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBlogQueryDao) ProtoMessage() {}

func (x *RspBlogQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBlogQueryDao.ProtoReflect.Descriptor instead.
func (*RspBlogQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{19}
}

func (x *RspBlogQueryDao) GetList() []*BlogQueryDao {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RspBlogQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspBlogQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RspBlogQueryDao) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReqBlogDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlogId    string `protobuf:"bytes,1,opt,name=blogId,proto3" json:"blogId,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqBlogDetailQueryDao) Reset() {
	*x = ReqBlogDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlogDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlogDetailQueryDao) ProtoMessage() {}

func (x *ReqBlogDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlogDetailQueryDao.ProtoReflect.Descriptor instead.
func (*ReqBlogDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{20}
}

func (x *ReqBlogDetailQueryDao) GetBlogId() string {
	if x != nil {
		return x.BlogId
	}
	return ""
}

func (x *ReqBlogDetailQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspBlogDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blog *BlogQueryDao `protobuf:"bytes,1,opt,name=blog,proto3" json:"blog,omitempty"`
}

func (x *RspBlogDetailQueryDao) Reset() {
	*x = RspBlogDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBlogDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBlogDetailQueryDao) ProtoMessage() {}

func (x *RspBlogDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBlogDetailQueryDao.ProtoReflect.Descriptor instead.
func (*RspBlogDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{21}
}

func (x *RspBlogDetailQueryDao) GetBlog() *BlogQueryDao {
	if x != nil {
		return x.Blog
	}
	return nil
}

var File_blog_proto protoreflect.FileDescriptor

var file_blog_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x6c,
	0x6f, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x54, 0x61, 0x67, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x54, 0x61, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x54, 0x61, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x2d, 0x0a, 0x13, 0x52,
	0x65, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x49, 0x0a, 0x13, 0x52, 0x73,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x58, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x22, 0x59, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x5b, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x46, 0x61, 0x6e,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x6d, 0x0a, 0x0f, 0x52, 0x73, 0x70, 0x46, 0x61, 0x6e, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x41, 0x64,
	0x64, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x42, 0x6c,
	0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x22, 0x2e, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x22, 0xba, 0x01,
	0x0a, 0x12, 0x52, 0x73, 0x70, 0x42, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x66, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x67,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x7f, 0x0a, 0x0f, 0x52, 0x73, 0x70, 0x42, 0x6c, 0x6f,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x42, 0x6c,
	0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x73, 0x70, 0x42, 0x6c, 0x6f,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12,
	0x26, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x2a, 0x3f, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x3c, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x69, 0x6b, 0x65, 0x4d, 0x6f, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x32, 0xe2, 0x07, 0x0a, 0x07, 0x44, 0x61, 0x6f, 0x42, 0x6c,
	0x6f, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12,
	0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x61, 0x67, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x54,
	0x61, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x14, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x61, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x1a, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x73, 0x70, 0x54, 0x61, 0x67, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65,
	0x71, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x19, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52,
	0x73, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x12, 0x47, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x14, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x67,
	0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x46,
	0x61, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x15, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x61, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x1a, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x73, 0x70, 0x46, 0x61, 0x6e,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x42, 0x6c, 0x6f,
	0x67, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52,
	0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71,
	0x42, 0x6c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x6f, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x3c, 0x0a, 0x0c,
	0x42, 0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x15, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x1a, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x6c,
	0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x4e, 0x0a, 0x12, 0x42, 0x6c,
	0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f,
	0x12, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x1b, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x3f, 0x0a, 0x0d, 0x42, 0x6c,
	0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x36, 0x5a, 0x34, 0x62,
	0x61, 0x62, 0x79, 0x2d, 0x66, 0x72, 0x69, 0x65, 0x64, 0x2d, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62,
	0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blog_proto_rawDescOnce sync.Once
	file_blog_proto_rawDescData = file_blog_proto_rawDesc
)

func file_blog_proto_rawDescGZIP() []byte {
	file_blog_proto_rawDescOnce.Do(func() {
		file_blog_proto_rawDescData = protoimpl.X.CompressGZIP(file_blog_proto_rawDescData)
	})
	return file_blog_proto_rawDescData
}

var file_blog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blog_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_blog_proto_goTypes = []interface{}{
	(BlogStatus)(0),               // 0: blog.BlogStatus
	(QueryType)(0),                // 1: blog.QueryType
	(*ReqTagAddDao)(nil),          // 2: blog.ReqTagAddDao
	(*ReqTagQueryDao)(nil),        // 3: blog.ReqTagQueryDao
	(*RspTagQueryDao)(nil),        // 4: blog.RspTagQueryDao
	(*ReqTagDeleteDao)(nil),       // 5: blog.ReqTagDeleteDao
	(*ReqCategoryAddDao)(nil),     // 6: blog.ReqCategoryAddDao
	(*ReqCategoryQueryDao)(nil),   // 7: blog.ReqCategoryQueryDao
	(*RspCategoryQueryDao)(nil),   // 8: blog.RspCategoryQueryDao
	(*ReqCategoryDeleteDao)(nil),  // 9: blog.ReqCategoryDeleteDao
	(*ReqFocusAddDao)(nil),        // 10: blog.ReqFocusAddDao
	(*ReqBlogLikeAddDao)(nil),     // 11: blog.ReqBlogLikeAddDao
	(*ReqFansQueryDao)(nil),       // 12: blog.ReqFansQueryDao
	(*RspFansQueryDao)(nil),       // 13: blog.RspFansQueryDao
	(*ReqBlogAddDao)(nil),         // 14: blog.ReqBlogAddDao
	(*ReqBlogUpdateDao)(nil),      // 15: blog.ReqBlogUpdateDao
	(*ReqBlogDeleteDao)(nil),      // 16: blog.ReqBlogDeleteDao
	(*ReqBloggerQueryDao)(nil),    // 17: blog.ReqBloggerQueryDao
	(*RspBloggerQueryDao)(nil),    // 18: blog.RspBloggerQueryDao
	(*ReqBlogQueryDao)(nil),       // 19: blog.ReqBlogQueryDao
	(*BlogQueryDao)(nil),          // 20: blog.BlogQueryDao
	(*RspBlogQueryDao)(nil),       // 21: blog.RspBlogQueryDao
	(*ReqBlogDetailQueryDao)(nil), // 22: blog.ReqBlogDetailQueryDao
	(*RspBlogDetailQueryDao)(nil), // 23: blog.RspBlogDetailQueryDao
	(*emptypb.Empty)(nil),         // 24: google.protobuf.Empty
}
var file_blog_proto_depIdxs = []int32{
	0,  // 0: blog.ReqBlogUpdateDao.status:type_name -> blog.BlogStatus
	1,  // 1: blog.ReqBlogQueryDao.queryType:type_name -> blog.QueryType
	20, // 2: blog.RspBlogQueryDao.list:type_name -> blog.BlogQueryDao
	20, // 3: blog.RspBlogDetailQueryDao.blog:type_name -> blog.BlogQueryDao
	2,  // 4: blog.DaoBlog.TagAddDao:input_type -> blog.ReqTagAddDao
	3,  // 5: blog.DaoBlog.TagQueryDao:input_type -> blog.ReqTagQueryDao
	5,  // 6: blog.DaoBlog.TagDeleteDao:input_type -> blog.ReqTagDeleteDao
	6,  // 7: blog.DaoBlog.CategoryAddDao:input_type -> blog.ReqCategoryAddDao
	7,  // 8: blog.DaoBlog.CategoryQueryDao:input_type -> blog.ReqCategoryQueryDao
	9,  // 9: blog.DaoBlog.CategoryDeleteDao:input_type -> blog.ReqCategoryDeleteDao
	10, // 10: blog.DaoBlog.FocusAddDao:input_type -> blog.ReqFocusAddDao
	11, // 11: blog.DaoBlog.BlogLikeAddDao:input_type -> blog.ReqBlogLikeAddDao
	12, // 12: blog.DaoBlog.FansQueryDao:input_type -> blog.ReqFansQueryDao
	14, // 13: blog.DaoBlog.BlogAddDao:input_type -> blog.ReqBlogAddDao
	15, // 14: blog.DaoBlog.BlogUpdateDao:input_type -> blog.ReqBlogUpdateDao
	17, // 15: blog.DaoBlog.BloggerQueryDao:input_type -> blog.ReqBloggerQueryDao
	19, // 16: blog.DaoBlog.BlogQueryDao:input_type -> blog.ReqBlogQueryDao
	22, // 17: blog.DaoBlog.BlogDetailQueryDao:input_type -> blog.ReqBlogDetailQueryDao
	16, // 18: blog.DaoBlog.BlogDeleteDao:input_type -> blog.ReqBlogDeleteDao
	24, // 19: blog.DaoBlog.TagAddDao:output_type -> google.protobuf.Empty
	4,  // 20: blog.DaoBlog.TagQueryDao:output_type -> blog.RspTagQueryDao
	24, // 21: blog.DaoBlog.TagDeleteDao:output_type -> google.protobuf.Empty
	24, // 22: blog.DaoBlog.CategoryAddDao:output_type -> google.protobuf.Empty
	8,  // 23: blog.DaoBlog.CategoryQueryDao:output_type -> blog.RspCategoryQueryDao
	24, // 24: blog.DaoBlog.CategoryDeleteDao:output_type -> google.protobuf.Empty
	24, // 25: blog.DaoBlog.FocusAddDao:output_type -> google.protobuf.Empty
	24, // 26: blog.DaoBlog.BlogLikeAddDao:output_type -> google.protobuf.Empty
	13, // 27: blog.DaoBlog.FansQueryDao:output_type -> blog.RspFansQueryDao
	24, // 28: blog.DaoBlog.BlogAddDao:output_type -> google.protobuf.Empty
	24, // 29: blog.DaoBlog.BlogUpdateDao:output_type -> google.protobuf.Empty
	18, // 30: blog.DaoBlog.BloggerQueryDao:output_type -> blog.RspBloggerQueryDao
	21, // 31: blog.DaoBlog.BlogQueryDao:output_type -> blog.RspBlogQueryDao
	23, // 32: blog.DaoBlog.BlogDetailQueryDao:output_type -> blog.RspBlogDetailQueryDao
	24, // 33: blog.DaoBlog.BlogDeleteDao:output_type -> google.protobuf.Empty
	19, // [19:34] is the sub-list for method output_type
	4,  // [4:19] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_blog_proto_init() }
func file_blog_proto_init() {
	if File_blog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTagAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTagQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspTagQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTagDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCategoryAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCategoryQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspCategoryQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCategoryDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFocusAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogLikeAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFansQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspFansQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogUpdateDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBloggerQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBloggerQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBlogQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlogDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBlogDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blog_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blog_proto_goTypes,
		DependencyIndexes: file_blog_proto_depIdxs,
		EnumInfos:         file_blog_proto_enumTypes,
		MessageInfos:      file_blog_proto_msgTypes,
	}.Build()
	File_blog_proto = out.File
	file_blog_proto_rawDesc = nil
	file_blog_proto_goTypes = nil
	file_blog_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DaoBlogClient is the client API for DaoBlog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DaoBlogClient interface {
	// 添加标签
	TagAddDao(ctx context.Context, in *ReqTagAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询标签
	TagQueryDao(ctx context.Context, in *ReqTagQueryDao, opts ...grpc.CallOption) (*RspTagQueryDao, error)
	// 删除标签
	TagDeleteDao(ctx context.Context, in *ReqTagDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 添加分类
	CategoryAddDao(ctx context.Context, in *ReqCategoryAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询分类
	CategoryQueryDao(ctx context.Context, in *ReqCategoryQueryDao, opts ...grpc.CallOption) (*RspCategoryQueryDao, error)
	// 删除分类
	CategoryDeleteDao(ctx context.Context, in *ReqCategoryDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 关注/取关博主
	FocusAddDao(ctx context.Context, in *ReqFocusAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 喜欢/取消喜欢博文
	BlogLikeAddDao(ctx context.Context, in *ReqBlogLikeAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询粉丝
	FansQueryDao(ctx context.Context, in *ReqFansQueryDao, opts ...grpc.CallOption) (*RspFansQueryDao, error)
	// 添加博文
	BlogAddDao(ctx context.Context, in *ReqBlogAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 更新博文
	BlogUpdateDao(ctx context.Context, in *ReqBlogUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询博主信息
	BloggerQueryDao(ctx context.Context, in *ReqBloggerQueryDao, opts ...grpc.CallOption) (*RspBloggerQueryDao, error)
	// 查询博文列表
	BlogQueryDao(ctx context.Context, in *ReqBlogQueryDao, opts ...grpc.CallOption) (*RspBlogQueryDao, error)
	// 查询博文详情
	BlogDetailQueryDao(ctx context.Context, in *ReqBlogDetailQueryDao, opts ...grpc.CallOption) (*RspBlogDetailQueryDao, error)
	// 删除博文
	BlogDeleteDao(ctx context.Context, in *ReqBlogDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type daoBlogClient struct {
	cc grpc.ClientConnInterface
}

func NewDaoBlogClient(cc grpc.ClientConnInterface) DaoBlogClient {
	return &daoBlogClient{cc}
}

func (c *daoBlogClient) TagAddDao(ctx context.Context, in *ReqTagAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/TagAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) TagQueryDao(ctx context.Context, in *ReqTagQueryDao, opts ...grpc.CallOption) (*RspTagQueryDao, error) {
	out := new(RspTagQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/TagQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) TagDeleteDao(ctx context.Context, in *ReqTagDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/TagDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) CategoryAddDao(ctx context.Context, in *ReqCategoryAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/CategoryAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) CategoryQueryDao(ctx context.Context, in *ReqCategoryQueryDao, opts ...grpc.CallOption) (*RspCategoryQueryDao, error) {
	out := new(RspCategoryQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/CategoryQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) CategoryDeleteDao(ctx context.Context, in *ReqCategoryDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/CategoryDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) FocusAddDao(ctx context.Context, in *ReqFocusAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/FocusAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogLikeAddDao(ctx context.Context, in *ReqBlogLikeAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogLikeAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) FansQueryDao(ctx context.Context, in *ReqFansQueryDao, opts ...grpc.CallOption) (*RspFansQueryDao, error) {
	out := new(RspFansQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/FansQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogAddDao(ctx context.Context, in *ReqBlogAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogUpdateDao(ctx context.Context, in *ReqBlogUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogUpdateDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BloggerQueryDao(ctx context.Context, in *ReqBloggerQueryDao, opts ...grpc.CallOption) (*RspBloggerQueryDao, error) {
	out := new(RspBloggerQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BloggerQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogQueryDao(ctx context.Context, in *ReqBlogQueryDao, opts ...grpc.CallOption) (*RspBlogQueryDao, error) {
	out := new(RspBlogQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogDetailQueryDao(ctx context.Context, in *ReqBlogDetailQueryDao, opts ...grpc.CallOption) (*RspBlogDetailQueryDao, error) {
	out := new(RspBlogDetailQueryDao)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogDetailQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoBlogClient) BlogDeleteDao(ctx context.Context, in *ReqBlogDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/blog.DaoBlog/BlogDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DaoBlogServer is the server API for DaoBlog service.
type DaoBlogServer interface {
	// 添加标签
	TagAddDao(context.Context, *ReqTagAddDao) (*emptypb.Empty, error)
	// 查询标签
	TagQueryDao(context.Context, *ReqTagQueryDao) (*RspTagQueryDao, error)
	// 删除标签
	TagDeleteDao(context.Context, *ReqTagDeleteDao) (*emptypb.Empty, error)
	// 添加分类
	CategoryAddDao(context.Context, *ReqCategoryAddDao) (*emptypb.Empty, error)
	// 查询分类
	CategoryQueryDao(context.Context, *ReqCategoryQueryDao) (*RspCategoryQueryDao, error)
	// 删除分类
	CategoryDeleteDao(context.Context, *ReqCategoryDeleteDao) (*emptypb.Empty, error)
	// 关注/取关博主
	FocusAddDao(context.Context, *ReqFocusAddDao) (*emptypb.Empty, error)
	// 喜欢/取消喜欢博文
	BlogLikeAddDao(context.Context, *ReqBlogLikeAddDao) (*emptypb.Empty, error)
	// 查询粉丝
	FansQueryDao(context.Context, *ReqFansQueryDao) (*RspFansQueryDao, error)
	// 添加博文
	BlogAddDao(context.Context, *ReqBlogAddDao) (*emptypb.Empty, error)
	// 更新博文
	BlogUpdateDao(context.Context, *ReqBlogUpdateDao) (*emptypb.Empty, error)
	// 查询博主信息
	BloggerQueryDao(context.Context, *ReqBloggerQueryDao) (*RspBloggerQueryDao, error)
	// 查询博文列表
	BlogQueryDao(context.Context, *ReqBlogQueryDao) (*RspBlogQueryDao, error)
	// 查询博文详情
	BlogDetailQueryDao(context.Context, *ReqBlogDetailQueryDao) (*RspBlogDetailQueryDao, error)
	// 删除博文
	BlogDeleteDao(context.Context, *ReqBlogDeleteDao) (*emptypb.Empty, error)
}

// UnimplementedDaoBlogServer can be embedded to have forward compatible implementations.
type UnimplementedDaoBlogServer struct {
}

func (*UnimplementedDaoBlogServer) TagAddDao(context.Context, *ReqTagAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagAddDao not implemented")
}
func (*UnimplementedDaoBlogServer) TagQueryDao(context.Context, *ReqTagQueryDao) (*RspTagQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) TagDeleteDao(context.Context, *ReqTagDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagDeleteDao not implemented")
}
func (*UnimplementedDaoBlogServer) CategoryAddDao(context.Context, *ReqCategoryAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CategoryAddDao not implemented")
}
func (*UnimplementedDaoBlogServer) CategoryQueryDao(context.Context, *ReqCategoryQueryDao) (*RspCategoryQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CategoryQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) CategoryDeleteDao(context.Context, *ReqCategoryDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CategoryDeleteDao not implemented")
}
func (*UnimplementedDaoBlogServer) FocusAddDao(context.Context, *ReqFocusAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FocusAddDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogLikeAddDao(context.Context, *ReqBlogLikeAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogLikeAddDao not implemented")
}
func (*UnimplementedDaoBlogServer) FansQueryDao(context.Context, *ReqFansQueryDao) (*RspFansQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FansQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogAddDao(context.Context, *ReqBlogAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogAddDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogUpdateDao(context.Context, *ReqBlogUpdateDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogUpdateDao not implemented")
}
func (*UnimplementedDaoBlogServer) BloggerQueryDao(context.Context, *ReqBloggerQueryDao) (*RspBloggerQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BloggerQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogQueryDao(context.Context, *ReqBlogQueryDao) (*RspBlogQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogDetailQueryDao(context.Context, *ReqBlogDetailQueryDao) (*RspBlogDetailQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogDetailQueryDao not implemented")
}
func (*UnimplementedDaoBlogServer) BlogDeleteDao(context.Context, *ReqBlogDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlogDeleteDao not implemented")
}

func RegisterDaoBlogServer(s *grpc.Server, srv DaoBlogServer) {
	s.RegisterService(&_DaoBlog_serviceDesc, srv)
}

func _DaoBlog_TagAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTagAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).TagAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/TagAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).TagAddDao(ctx, req.(*ReqTagAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_TagQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTagQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).TagQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/TagQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).TagQueryDao(ctx, req.(*ReqTagQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_TagDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTagDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).TagDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/TagDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).TagDeleteDao(ctx, req.(*ReqTagDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_CategoryAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCategoryAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).CategoryAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/CategoryAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).CategoryAddDao(ctx, req.(*ReqCategoryAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_CategoryQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCategoryQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).CategoryQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/CategoryQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).CategoryQueryDao(ctx, req.(*ReqCategoryQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_CategoryDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCategoryDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).CategoryDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/CategoryDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).CategoryDeleteDao(ctx, req.(*ReqCategoryDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_FocusAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFocusAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).FocusAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/FocusAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).FocusAddDao(ctx, req.(*ReqFocusAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogLikeAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogLikeAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogLikeAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogLikeAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogLikeAddDao(ctx, req.(*ReqBlogLikeAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_FansQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFansQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).FansQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/FansQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).FansQueryDao(ctx, req.(*ReqFansQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogAddDao(ctx, req.(*ReqBlogAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogUpdateDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogUpdateDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogUpdateDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogUpdateDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogUpdateDao(ctx, req.(*ReqBlogUpdateDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BloggerQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBloggerQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BloggerQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BloggerQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BloggerQueryDao(ctx, req.(*ReqBloggerQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogQueryDao(ctx, req.(*ReqBlogQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogDetailQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogDetailQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogDetailQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogDetailQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogDetailQueryDao(ctx, req.(*ReqBlogDetailQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoBlog_BlogDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBlogDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoBlogServer).BlogDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.DaoBlog/BlogDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoBlogServer).BlogDeleteDao(ctx, req.(*ReqBlogDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

var _DaoBlog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.DaoBlog",
	HandlerType: (*DaoBlogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TagAddDao",
			Handler:    _DaoBlog_TagAddDao_Handler,
		},
		{
			MethodName: "TagQueryDao",
			Handler:    _DaoBlog_TagQueryDao_Handler,
		},
		{
			MethodName: "TagDeleteDao",
			Handler:    _DaoBlog_TagDeleteDao_Handler,
		},
		{
			MethodName: "CategoryAddDao",
			Handler:    _DaoBlog_CategoryAddDao_Handler,
		},
		{
			MethodName: "CategoryQueryDao",
			Handler:    _DaoBlog_CategoryQueryDao_Handler,
		},
		{
			MethodName: "CategoryDeleteDao",
			Handler:    _DaoBlog_CategoryDeleteDao_Handler,
		},
		{
			MethodName: "FocusAddDao",
			Handler:    _DaoBlog_FocusAddDao_Handler,
		},
		{
			MethodName: "BlogLikeAddDao",
			Handler:    _DaoBlog_BlogLikeAddDao_Handler,
		},
		{
			MethodName: "FansQueryDao",
			Handler:    _DaoBlog_FansQueryDao_Handler,
		},
		{
			MethodName: "BlogAddDao",
			Handler:    _DaoBlog_BlogAddDao_Handler,
		},
		{
			MethodName: "BlogUpdateDao",
			Handler:    _DaoBlog_BlogUpdateDao_Handler,
		},
		{
			MethodName: "BloggerQueryDao",
			Handler:    _DaoBlog_BloggerQueryDao_Handler,
		},
		{
			MethodName: "BlogQueryDao",
			Handler:    _DaoBlog_BlogQueryDao_Handler,
		},
		{
			MethodName: "BlogDetailQueryDao",
			Handler:    _DaoBlog_BlogDetailQueryDao_Handler,
		},
		{
			MethodName: "BlogDeleteDao",
			Handler:    _DaoBlog_BlogDeleteDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog.proto",
}
