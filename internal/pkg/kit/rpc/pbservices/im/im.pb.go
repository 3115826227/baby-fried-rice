// proto 文件版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: im.proto

// 生成文件的包名

package im

import (
	common "baby-fried-rice/internal/pkg/kit/rpc/pbservices/common"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//会话类型
type SessionType int32

const (
	// 双人会话
	SessionType_DoubleSession SessionType = 0
	// 多人讨论组会话
	SessionType_MultiSession SessionType = 1
	// 群会话
	SessionType_GroupSession SessionType = 2
	// 官方群会话
	SessionType_OfficialSession SessionType = 3
)

// Enum value maps for SessionType.
var (
	SessionType_name = map[int32]string{
		0: "DoubleSession",
		1: "MultiSession",
		2: "GroupSession",
		3: "OfficialSession",
	}
	SessionType_value = map[string]int32{
		"DoubleSession":   0,
		"MultiSession":    1,
		"GroupSession":    2,
		"OfficialSession": 3,
	}
)

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[0].Descriptor()
}

func (SessionType) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[0]
}

func (x SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionType.Descriptor instead.
func (SessionType) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

// 会话加入权限
type SessionJoinPermissionType int32

const (
	// 无限制
	SessionJoinPermissionType_NoneLimit SessionJoinPermissionType = 0
	// 邀请加入
	SessionJoinPermissionType_InviteJoin SessionJoinPermissionType = 1
	// 创建者审核
	SessionJoinPermissionType_OriginAudit SessionJoinPermissionType = 2
	// 管理员审核
	SessionJoinPermissionType_AdminAudit SessionJoinPermissionType = 3
)

// Enum value maps for SessionJoinPermissionType.
var (
	SessionJoinPermissionType_name = map[int32]string{
		0: "NoneLimit",
		1: "InviteJoin",
		2: "OriginAudit",
		3: "AdminAudit",
	}
	SessionJoinPermissionType_value = map[string]int32{
		"NoneLimit":   0,
		"InviteJoin":  1,
		"OriginAudit": 2,
		"AdminAudit":  3,
	}
)

func (x SessionJoinPermissionType) Enum() *SessionJoinPermissionType {
	p := new(SessionJoinPermissionType)
	*p = x
	return p
}

func (x SessionJoinPermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionJoinPermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[1].Descriptor()
}

func (SessionJoinPermissionType) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[1]
}

func (x SessionJoinPermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionJoinPermissionType.Descriptor instead.
func (SessionJoinPermissionType) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

// 会话消息类型
type SessionMessageType int32

const (
	SessionMessageType_TextMessage SessionMessageType = 0
	SessionMessageType_FileMessage SessionMessageType = 1
	SessionMessageType_ImgMessage  SessionMessageType = 2
)

// Enum value maps for SessionMessageType.
var (
	SessionMessageType_name = map[int32]string{
		0: "TextMessage",
		1: "FileMessage",
		2: "ImgMessage",
	}
	SessionMessageType_value = map[string]int32{
		"TextMessage": 0,
		"FileMessage": 1,
		"ImgMessage":  2,
	}
)

func (x SessionMessageType) Enum() *SessionMessageType {
	p := new(SessionMessageType)
	*p = x
	return p
}

func (x SessionMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[2].Descriptor()
}

func (SessionMessageType) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[2]
}

func (x SessionMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionMessageType.Descriptor instead.
func (SessionMessageType) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

// 会话创建
type ReqSessionAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话类型
	SessionType SessionType `protobuf:"varint,1,opt,name=sessionType,proto3,enum=im.SessionType" json:"sessionType,omitempty"`
	// 会话加入限制
	JoinPermissionType SessionJoinPermissionType `protobuf:"varint,2,opt,name=joinPermissionType,proto3,enum=im.SessionJoinPermissionType" json:"joinPermissionType,omitempty"`
	// 会话名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 会话创建者
	Origin string `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
	// 会话加入人员
	Joins []string `protobuf:"bytes,5,rep,name=joins,proto3" json:"joins,omitempty"`
}

func (x *ReqSessionAddDao) Reset() {
	*x = ReqSessionAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionAddDao) ProtoMessage() {}

func (x *ReqSessionAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionAddDao.ProtoReflect.Descriptor instead.
func (*ReqSessionAddDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

func (x *ReqSessionAddDao) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_DoubleSession
}

func (x *ReqSessionAddDao) GetJoinPermissionType() SessionJoinPermissionType {
	if x != nil {
		return x.JoinPermissionType
	}
	return SessionJoinPermissionType_NoneLimit
}

func (x *ReqSessionAddDao) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqSessionAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqSessionAddDao) GetJoins() []string {
	if x != nil {
		return x.Joins
	}
	return nil
}

type ReqSessionUpdateDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId int64 `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 会话类型
	SessionType SessionType `protobuf:"varint,2,opt,name=sessionType,proto3,enum=im.SessionType" json:"sessionType,omitempty"`
	// 会话加入限制
	JoinPermissionType SessionJoinPermissionType `protobuf:"varint,3,opt,name=joinPermissionType,proto3,enum=im.SessionJoinPermissionType" json:"joinPermissionType,omitempty"`
	// 会话名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 操作者
	AccountId string `protobuf:"bytes,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqSessionUpdateDao) Reset() {
	*x = ReqSessionUpdateDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionUpdateDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionUpdateDao) ProtoMessage() {}

func (x *ReqSessionUpdateDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionUpdateDao.ProtoReflect.Descriptor instead.
func (*ReqSessionUpdateDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

func (x *ReqSessionUpdateDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionUpdateDao) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_DoubleSession
}

func (x *ReqSessionUpdateDao) GetJoinPermissionType() SessionJoinPermissionType {
	if x != nil {
		return x.JoinPermissionType
	}
	return SessionJoinPermissionType_NoneLimit
}

func (x *ReqSessionUpdateDao) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqSessionUpdateDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// 会话查询
type ReqSessionQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonSearchReq *common.CommonSearchRequest `protobuf:"bytes,1,opt,name=commonSearchReq,proto3" json:"commonSearchReq,omitempty"`
	// 会话id
	SessionId int64 `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 会话类型
	SessionType SessionType `protobuf:"varint,3,opt,name=sessionType,proto3,enum=im.SessionType" json:"sessionType,omitempty"`
	// 创建者
	Origin string `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
	// 查询者
	AccountId string `protobuf:"bytes,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 按照最新消息时间排序
	LatestMessageTimeOrderBy bool `protobuf:"varint,6,opt,name=latestMessageTimeOrderBy,proto3" json:"latestMessageTimeOrderBy,omitempty"`
}

func (x *ReqSessionQueryDao) Reset() {
	*x = ReqSessionQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionQueryDao) ProtoMessage() {}

func (x *ReqSessionQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionQueryDao.ProtoReflect.Descriptor instead.
func (*ReqSessionQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

func (x *ReqSessionQueryDao) GetCommonSearchReq() *common.CommonSearchRequest {
	if x != nil {
		return x.CommonSearchReq
	}
	return nil
}

func (x *ReqSessionQueryDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionQueryDao) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_DoubleSession
}

func (x *ReqSessionQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqSessionQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionQueryDao) GetLatestMessageTimeOrderBy() bool {
	if x != nil {
		return x.LatestMessageTimeOrderBy
	}
	return false
}

type RspSessionQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*SessionQueryDao `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Page     int64              `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64              `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RspSessionQueryDao) Reset() {
	*x = RspSessionQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessionQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessionQueryDao) ProtoMessage() {}

func (x *RspSessionQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessionQueryDao.ProtoReflect.Descriptor instead.
func (*RspSessionQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{3}
}

func (x *RspSessionQueryDao) GetSessions() []*SessionQueryDao {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *RspSessionQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspSessionQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 会话信息
type SessionQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话id
	SessionId int64 `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 会话类型
	SessionType SessionType `protobuf:"varint,2,opt,name=sessionType,proto3,enum=im.SessionType" json:"sessionType,omitempty"`
	// 会话创建者
	Origin string `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	// 会话名
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 未读消息数
	Unread int64 `protobuf:"varint,5,opt,name=unread,proto3" json:"unread,omitempty"`
	// 最近一条消息内容
	Latest *SessionMessageDao `protobuf:"bytes,6,opt,name=latest,proto3" json:"latest,omitempty"`
	// 会话创建时间
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 会话加入人员
	Joins []string `protobuf:"bytes,8,rep,name=joins,proto3" json:"joins,omitempty"`
}

func (x *SessionQueryDao) Reset() {
	*x = SessionQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryDao) ProtoMessage() {}

func (x *SessionQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryDao.ProtoReflect.Descriptor instead.
func (*SessionQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{4}
}

func (x *SessionQueryDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *SessionQueryDao) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_DoubleSession
}

func (x *SessionQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SessionQueryDao) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SessionQueryDao) GetUnread() int64 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *SessionQueryDao) GetLatest() *SessionMessageDao {
	if x != nil {
		return x.Latest
	}
	return nil
}

func (x *SessionQueryDao) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SessionQueryDao) GetJoins() []string {
	if x != nil {
		return x.Joins
	}
	return nil
}

// 查询会话详情
type ReqSessionDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId int64  `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ReqSessionDetailQueryDao) Reset() {
	*x = ReqSessionDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionDetailQueryDao) ProtoMessage() {}

func (x *ReqSessionDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionDetailQueryDao.ProtoReflect.Descriptor instead.
func (*ReqSessionDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{5}
}

func (x *ReqSessionDetailQueryDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionDetailQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspSessionDetailQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *SessionQueryDao `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	// 会话加入权限
	JoinPermissionType SessionJoinPermissionType `protobuf:"varint,3,opt,name=joinPermissionType,proto3,enum=im.SessionJoinPermissionType" json:"joinPermissionType,omitempty"`
}

func (x *RspSessionDetailQueryDao) Reset() {
	*x = RspSessionDetailQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessionDetailQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessionDetailQueryDao) ProtoMessage() {}

func (x *RspSessionDetailQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessionDetailQueryDao.ProtoReflect.Descriptor instead.
func (*RspSessionDetailQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{6}
}

func (x *RspSessionDetailQueryDao) GetSession() *SessionQueryDao {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *RspSessionDetailQueryDao) GetJoinPermissionType() SessionJoinPermissionType {
	if x != nil {
		return x.JoinPermissionType
	}
	return SessionJoinPermissionType_NoneLimit
}

// 加入会话
type ReqSessionJoinDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId int64  `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *ReqSessionJoinDao) Reset() {
	*x = ReqSessionJoinDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionJoinDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionJoinDao) ProtoMessage() {}

func (x *ReqSessionJoinDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionJoinDao.ProtoReflect.Descriptor instead.
func (*ReqSessionJoinDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{7}
}

func (x *ReqSessionJoinDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionJoinDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// 离开会话
type ReqSessionLeaveDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId int64  `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *ReqSessionLeaveDao) Reset() {
	*x = ReqSessionLeaveDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionLeaveDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionLeaveDao) ProtoMessage() {}

func (x *ReqSessionLeaveDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionLeaveDao.ProtoReflect.Descriptor instead.
func (*ReqSessionLeaveDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{8}
}

func (x *ReqSessionLeaveDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionLeaveDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// 删除会话(解散会话)
type ReqSessionDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId int64  `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *ReqSessionDeleteDao) Reset() {
	*x = ReqSessionDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionDeleteDao) ProtoMessage() {}

func (x *ReqSessionDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqSessionDeleteDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{9}
}

func (x *ReqSessionDeleteDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionDeleteDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// 会话消息
type SessionMessageDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话id
	SessionId int64 `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 消息id
	MessageId int64 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	// 消息类型
	MessageType SessionMessageType `protobuf:"varint,3,opt,name=messageType,proto3,enum=im.SessionMessageType" json:"messageType,omitempty"`
	// 消息发送者
	Send string `protobuf:"bytes,4,opt,name=send,proto3" json:"send,omitempty"`
	// 消息接收者
	Receive string `protobuf:"bytes,5,opt,name=receive,proto3" json:"receive,omitempty"`
	// 消息内容
	Content []byte `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	// 创建时间
	SendTimestamp int64 `protobuf:"varint,7,opt,name=sendTimestamp,proto3" json:"sendTimestamp,omitempty"`
	// 读取状态 0-未读 1-已读
	ReadStatus bool `protobuf:"varint,8,opt,name=readStatus,proto3" json:"readStatus,omitempty"`
}

func (x *SessionMessageDao) Reset() {
	*x = SessionMessageDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionMessageDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMessageDao) ProtoMessage() {}

func (x *SessionMessageDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMessageDao.ProtoReflect.Descriptor instead.
func (*SessionMessageDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{10}
}

func (x *SessionMessageDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *SessionMessageDao) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SessionMessageDao) GetMessageType() SessionMessageType {
	if x != nil {
		return x.MessageType
	}
	return SessionMessageType_TextMessage
}

func (x *SessionMessageDao) GetSend() string {
	if x != nil {
		return x.Send
	}
	return ""
}

func (x *SessionMessageDao) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *SessionMessageDao) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SessionMessageDao) GetSendTimestamp() int64 {
	if x != nil {
		return x.SendTimestamp
	}
	return 0
}

func (x *SessionMessageDao) GetReadStatus() bool {
	if x != nil {
		return x.ReadStatus
	}
	return false
}

// 会话消息添加
type ReqSessionMessageAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息类型
	MessageType SessionMessageType `protobuf:"varint,2,opt,name=messageType,proto3,enum=im.SessionMessageType" json:"messageType,omitempty"`
	// 消息发送者
	Send string `protobuf:"bytes,3,opt,name=send,proto3" json:"send,omitempty"`
	// 会话id
	SessionId int64 `protobuf:"varint,4,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 消息内容
	Content []byte `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	// 发送时间
	SendTimestamp int64 `protobuf:"varint,6,opt,name=sendTimestamp,proto3" json:"sendTimestamp,omitempty"`
}

func (x *ReqSessionMessageAddDao) Reset() {
	*x = ReqSessionMessageAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMessageAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMessageAddDao) ProtoMessage() {}

func (x *ReqSessionMessageAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMessageAddDao.ProtoReflect.Descriptor instead.
func (*ReqSessionMessageAddDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{11}
}

func (x *ReqSessionMessageAddDao) GetMessageType() SessionMessageType {
	if x != nil {
		return x.MessageType
	}
	return SessionMessageType_TextMessage
}

func (x *ReqSessionMessageAddDao) GetSend() string {
	if x != nil {
		return x.Send
	}
	return ""
}

func (x *ReqSessionMessageAddDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionMessageAddDao) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReqSessionMessageAddDao) GetSendTimestamp() int64 {
	if x != nil {
		return x.SendTimestamp
	}
	return 0
}

// 会话消息查询
type ReqSessionMessageQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SessionId int64  `protobuf:"varint,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Date      string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	AccountId string `protobuf:"bytes,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ReqSessionMessageQueryDao) Reset() {
	*x = ReqSessionMessageQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMessageQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMessageQueryDao) ProtoMessage() {}

func (x *ReqSessionMessageQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMessageQueryDao.ProtoReflect.Descriptor instead.
func (*ReqSessionMessageQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{12}
}

func (x *ReqSessionMessageQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqSessionMessageQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ReqSessionMessageQueryDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionMessageQueryDao) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ReqSessionMessageQueryDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RspSessionMessageQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*SessionMessageDao `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Page     int64                `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64                `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RspSessionMessageQueryDao) Reset() {
	*x = RspSessionMessageQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessionMessageQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessionMessageQueryDao) ProtoMessage() {}

func (x *RspSessionMessageQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessionMessageQueryDao.ProtoReflect.Descriptor instead.
func (*RspSessionMessageQueryDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{13}
}

func (x *RspSessionMessageQueryDao) GetMessages() []*SessionMessageDao {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RspSessionMessageQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspSessionMessageQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 会话消息读取状态更新
type ReqSessionMessageReadStatusUpdateDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  string  `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId  int64   `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	MessageIds []int64 `protobuf:"varint,3,rep,packed,name=messageIds,proto3" json:"messageIds,omitempty"`
}

func (x *ReqSessionMessageReadStatusUpdateDao) Reset() {
	*x = ReqSessionMessageReadStatusUpdateDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMessageReadStatusUpdateDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMessageReadStatusUpdateDao) ProtoMessage() {}

func (x *ReqSessionMessageReadStatusUpdateDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMessageReadStatusUpdateDao.ProtoReflect.Descriptor instead.
func (*ReqSessionMessageReadStatusUpdateDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{14}
}

func (x *ReqSessionMessageReadStatusUpdateDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionMessageReadStatusUpdateDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionMessageReadStatusUpdateDao) GetMessageIds() []int64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

// 会话消息删除
type ReqSessionMessageDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  string  `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId  int64   `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	MessageIds []int64 `protobuf:"varint,3,rep,packed,name=messageIds,proto3" json:"messageIds,omitempty"`
}

func (x *ReqSessionMessageDeleteDao) Reset() {
	*x = ReqSessionMessageDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMessageDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMessageDeleteDao) ProtoMessage() {}

func (x *ReqSessionMessageDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMessageDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqSessionMessageDeleteDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{15}
}

func (x *ReqSessionMessageDeleteDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionMessageDeleteDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ReqSessionMessageDeleteDao) GetMessageIds() []int64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

// 清空会话消息
type ReqSessionMessageFlushDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SessionId int64  `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *ReqSessionMessageFlushDao) Reset() {
	*x = ReqSessionMessageFlushDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMessageFlushDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMessageFlushDao) ProtoMessage() {}

func (x *ReqSessionMessageFlushDao) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMessageFlushDao.ProtoReflect.Descriptor instead.
func (*ReqSessionMessageFlushDao) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{16}
}

func (x *ReqSessionMessageFlushDao) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReqSessionMessageFlushDao) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

var File_im_proto protoreflect.FileDescriptor

var file_im_proto_rawDesc = []byte{
	0x0a, 0x08, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6d, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x31,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4d, 0x0a, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x6a, 0x6f,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6a, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x69,
	0x6e, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x6a,
	0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x02, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x18, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x75, 0x0a,
	0x12, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a,
	0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x6f, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6a, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x69,
	0x6e, 0x73, 0x22, 0x57, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x18,
	0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x97, 0x02, 0x0a,
	0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x44,
	0x61, 0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9b,
	0x01, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x19,
	0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x24, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x78, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x44, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x2a, 0x59, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x2a,
	0x5b, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x6f, 0x6e, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x10, 0x03, 0x2a, 0x46, 0x0a, 0x12,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6d, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x02, 0x32, 0x9c, 0x07, 0x0a, 0x05, 0x44, 0x61, 0x6f, 0x49, 0x6d, 0x12, 0x3d,
	0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12,
	0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a,
	0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x6f, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e,
	0x69, 0x6d, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x53, 0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1c,
	0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x1c, 0x2e, 0x69,
	0x6d, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x6f, 0x12, 0x15, 0x2e, 0x69,
	0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e,
	0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x16,
	0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43,
	0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x61, 0x6f, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x1b, 0x2e, 0x69, 0x6d,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x56, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x1d, 0x2e, 0x69, 0x6d, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x1a, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x52,
	0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x65, 0x0a, 0x21, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x28, 0x2e,
	0x69, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x51, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4f, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x44, 0x61, 0x6f, 0x12, 0x1d, 0x2e, 0x69,
	0x6d, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x34, 0x5a, 0x32, 0x62, 0x61, 0x62, 0x79, 0x2d, 0x66, 0x72, 0x69, 0x65,
	0x64, 0x2d, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_im_proto_rawDescOnce sync.Once
	file_im_proto_rawDescData = file_im_proto_rawDesc
)

func file_im_proto_rawDescGZIP() []byte {
	file_im_proto_rawDescOnce.Do(func() {
		file_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_im_proto_rawDescData)
	})
	return file_im_proto_rawDescData
}

var file_im_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_im_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_im_proto_goTypes = []interface{}{
	(SessionType)(0),                             // 0: im.SessionType
	(SessionJoinPermissionType)(0),               // 1: im.SessionJoinPermissionType
	(SessionMessageType)(0),                      // 2: im.SessionMessageType
	(*ReqSessionAddDao)(nil),                     // 3: im.ReqSessionAddDao
	(*ReqSessionUpdateDao)(nil),                  // 4: im.ReqSessionUpdateDao
	(*ReqSessionQueryDao)(nil),                   // 5: im.ReqSessionQueryDao
	(*RspSessionQueryDao)(nil),                   // 6: im.RspSessionQueryDao
	(*SessionQueryDao)(nil),                      // 7: im.SessionQueryDao
	(*ReqSessionDetailQueryDao)(nil),             // 8: im.ReqSessionDetailQueryDao
	(*RspSessionDetailQueryDao)(nil),             // 9: im.RspSessionDetailQueryDao
	(*ReqSessionJoinDao)(nil),                    // 10: im.ReqSessionJoinDao
	(*ReqSessionLeaveDao)(nil),                   // 11: im.ReqSessionLeaveDao
	(*ReqSessionDeleteDao)(nil),                  // 12: im.ReqSessionDeleteDao
	(*SessionMessageDao)(nil),                    // 13: im.SessionMessageDao
	(*ReqSessionMessageAddDao)(nil),              // 14: im.ReqSessionMessageAddDao
	(*ReqSessionMessageQueryDao)(nil),            // 15: im.ReqSessionMessageQueryDao
	(*RspSessionMessageQueryDao)(nil),            // 16: im.RspSessionMessageQueryDao
	(*ReqSessionMessageReadStatusUpdateDao)(nil), // 17: im.ReqSessionMessageReadStatusUpdateDao
	(*ReqSessionMessageDeleteDao)(nil),           // 18: im.ReqSessionMessageDeleteDao
	(*ReqSessionMessageFlushDao)(nil),            // 19: im.ReqSessionMessageFlushDao
	(*common.CommonSearchRequest)(nil),           // 20: common.CommonSearchRequest
	(*emptypb.Empty)(nil),                        // 21: google.protobuf.Empty
}
var file_im_proto_depIdxs = []int32{
	0,  // 0: im.ReqSessionAddDao.sessionType:type_name -> im.SessionType
	1,  // 1: im.ReqSessionAddDao.joinPermissionType:type_name -> im.SessionJoinPermissionType
	0,  // 2: im.ReqSessionUpdateDao.sessionType:type_name -> im.SessionType
	1,  // 3: im.ReqSessionUpdateDao.joinPermissionType:type_name -> im.SessionJoinPermissionType
	20, // 4: im.ReqSessionQueryDao.commonSearchReq:type_name -> common.CommonSearchRequest
	0,  // 5: im.ReqSessionQueryDao.sessionType:type_name -> im.SessionType
	7,  // 6: im.RspSessionQueryDao.sessions:type_name -> im.SessionQueryDao
	0,  // 7: im.SessionQueryDao.sessionType:type_name -> im.SessionType
	13, // 8: im.SessionQueryDao.latest:type_name -> im.SessionMessageDao
	7,  // 9: im.RspSessionDetailQueryDao.session:type_name -> im.SessionQueryDao
	1,  // 10: im.RspSessionDetailQueryDao.joinPermissionType:type_name -> im.SessionJoinPermissionType
	2,  // 11: im.SessionMessageDao.messageType:type_name -> im.SessionMessageType
	2,  // 12: im.ReqSessionMessageAddDao.messageType:type_name -> im.SessionMessageType
	13, // 13: im.RspSessionMessageQueryDao.messages:type_name -> im.SessionMessageDao
	3,  // 14: im.DaoIm.SessionAddDao:input_type -> im.ReqSessionAddDao
	4,  // 15: im.DaoIm.SessionUpdateDao:input_type -> im.ReqSessionUpdateDao
	5,  // 16: im.DaoIm.SessionQueryDao:input_type -> im.ReqSessionQueryDao
	8,  // 17: im.DaoIm.SessionDetailQueryDao:input_type -> im.ReqSessionDetailQueryDao
	10, // 18: im.DaoIm.SessionJoinDao:input_type -> im.ReqSessionJoinDao
	11, // 19: im.DaoIm.SessionLeaveDao:input_type -> im.ReqSessionLeaveDao
	12, // 20: im.DaoIm.SessionDeleteDao:input_type -> im.ReqSessionDeleteDao
	14, // 21: im.DaoIm.SessionMessageAddDao:input_type -> im.ReqSessionMessageAddDao
	15, // 22: im.DaoIm.SessionMessageQueryDao:input_type -> im.ReqSessionMessageQueryDao
	17, // 23: im.DaoIm.SessionMessageReadStatusUpdateDao:input_type -> im.ReqSessionMessageReadStatusUpdateDao
	18, // 24: im.DaoIm.SessionMessageDeleteDao:input_type -> im.ReqSessionMessageDeleteDao
	19, // 25: im.DaoIm.SessionMessageFlushDao:input_type -> im.ReqSessionMessageFlushDao
	21, // 26: im.DaoIm.SessionAddDao:output_type -> google.protobuf.Empty
	21, // 27: im.DaoIm.SessionUpdateDao:output_type -> google.protobuf.Empty
	6,  // 28: im.DaoIm.SessionQueryDao:output_type -> im.RspSessionQueryDao
	9,  // 29: im.DaoIm.SessionDetailQueryDao:output_type -> im.RspSessionDetailQueryDao
	21, // 30: im.DaoIm.SessionJoinDao:output_type -> google.protobuf.Empty
	21, // 31: im.DaoIm.SessionLeaveDao:output_type -> google.protobuf.Empty
	21, // 32: im.DaoIm.SessionDeleteDao:output_type -> google.protobuf.Empty
	21, // 33: im.DaoIm.SessionMessageAddDao:output_type -> google.protobuf.Empty
	16, // 34: im.DaoIm.SessionMessageQueryDao:output_type -> im.RspSessionMessageQueryDao
	21, // 35: im.DaoIm.SessionMessageReadStatusUpdateDao:output_type -> google.protobuf.Empty
	21, // 36: im.DaoIm.SessionMessageDeleteDao:output_type -> google.protobuf.Empty
	21, // 37: im.DaoIm.SessionMessageFlushDao:output_type -> google.protobuf.Empty
	26, // [26:38] is the sub-list for method output_type
	14, // [14:26] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_im_proto_init() }
func file_im_proto_init() {
	if File_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionUpdateDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessionQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessionDetailQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionJoinDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionLeaveDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionMessageDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMessageAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMessageQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessionMessageQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMessageReadStatusUpdateDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMessageDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMessageFlushDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_im_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_proto_goTypes,
		DependencyIndexes: file_im_proto_depIdxs,
		EnumInfos:         file_im_proto_enumTypes,
		MessageInfos:      file_im_proto_msgTypes,
	}.Build()
	File_im_proto = out.File
	file_im_proto_rawDesc = nil
	file_im_proto_goTypes = nil
	file_im_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DaoImClient is the client API for DaoIm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DaoImClient interface {
	// 创建会话
	SessionAddDao(ctx context.Context, in *ReqSessionAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 更新会话信息
	SessionUpdateDao(ctx context.Context, in *ReqSessionUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 查询会话列表
	SessionQueryDao(ctx context.Context, in *ReqSessionQueryDao, opts ...grpc.CallOption) (*RspSessionQueryDao, error)
	// 查询会话详细信息
	SessionDetailQueryDao(ctx context.Context, in *ReqSessionDetailQueryDao, opts ...grpc.CallOption) (*RspSessionDetailQueryDao, error)
	// 加入会话
	SessionJoinDao(ctx context.Context, in *ReqSessionJoinDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 离开会话
	SessionLeaveDao(ctx context.Context, in *ReqSessionLeaveDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 删除会话
	SessionDeleteDao(ctx context.Context, in *ReqSessionDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 会话消息添加
	SessionMessageAddDao(ctx context.Context, in *ReqSessionMessageAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 会话消息查询
	SessionMessageQueryDao(ctx context.Context, in *ReqSessionMessageQueryDao, opts ...grpc.CallOption) (*RspSessionMessageQueryDao, error)
	// 会话消息读取状态更新
	SessionMessageReadStatusUpdateDao(ctx context.Context, in *ReqSessionMessageReadStatusUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 会话消息删除
	SessionMessageDeleteDao(ctx context.Context, in *ReqSessionMessageDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 会话消息清空
	SessionMessageFlushDao(ctx context.Context, in *ReqSessionMessageFlushDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type daoImClient struct {
	cc grpc.ClientConnInterface
}

func NewDaoImClient(cc grpc.ClientConnInterface) DaoImClient {
	return &daoImClient{cc}
}

func (c *daoImClient) SessionAddDao(ctx context.Context, in *ReqSessionAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionUpdateDao(ctx context.Context, in *ReqSessionUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionUpdateDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionQueryDao(ctx context.Context, in *ReqSessionQueryDao, opts ...grpc.CallOption) (*RspSessionQueryDao, error) {
	out := new(RspSessionQueryDao)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionDetailQueryDao(ctx context.Context, in *ReqSessionDetailQueryDao, opts ...grpc.CallOption) (*RspSessionDetailQueryDao, error) {
	out := new(RspSessionDetailQueryDao)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionDetailQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionJoinDao(ctx context.Context, in *ReqSessionJoinDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionJoinDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionLeaveDao(ctx context.Context, in *ReqSessionLeaveDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionLeaveDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionDeleteDao(ctx context.Context, in *ReqSessionDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionMessageAddDao(ctx context.Context, in *ReqSessionMessageAddDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionMessageAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionMessageQueryDao(ctx context.Context, in *ReqSessionMessageQueryDao, opts ...grpc.CallOption) (*RspSessionMessageQueryDao, error) {
	out := new(RspSessionMessageQueryDao)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionMessageQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionMessageReadStatusUpdateDao(ctx context.Context, in *ReqSessionMessageReadStatusUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionMessageReadStatusUpdateDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionMessageDeleteDao(ctx context.Context, in *ReqSessionMessageDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionMessageDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoImClient) SessionMessageFlushDao(ctx context.Context, in *ReqSessionMessageFlushDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/im.DaoIm/SessionMessageFlushDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DaoImServer is the server API for DaoIm service.
type DaoImServer interface {
	// 创建会话
	SessionAddDao(context.Context, *ReqSessionAddDao) (*emptypb.Empty, error)
	// 更新会话信息
	SessionUpdateDao(context.Context, *ReqSessionUpdateDao) (*emptypb.Empty, error)
	// 查询会话列表
	SessionQueryDao(context.Context, *ReqSessionQueryDao) (*RspSessionQueryDao, error)
	// 查询会话详细信息
	SessionDetailQueryDao(context.Context, *ReqSessionDetailQueryDao) (*RspSessionDetailQueryDao, error)
	// 加入会话
	SessionJoinDao(context.Context, *ReqSessionJoinDao) (*emptypb.Empty, error)
	// 离开会话
	SessionLeaveDao(context.Context, *ReqSessionLeaveDao) (*emptypb.Empty, error)
	// 删除会话
	SessionDeleteDao(context.Context, *ReqSessionDeleteDao) (*emptypb.Empty, error)
	// 会话消息添加
	SessionMessageAddDao(context.Context, *ReqSessionMessageAddDao) (*emptypb.Empty, error)
	// 会话消息查询
	SessionMessageQueryDao(context.Context, *ReqSessionMessageQueryDao) (*RspSessionMessageQueryDao, error)
	// 会话消息读取状态更新
	SessionMessageReadStatusUpdateDao(context.Context, *ReqSessionMessageReadStatusUpdateDao) (*emptypb.Empty, error)
	// 会话消息删除
	SessionMessageDeleteDao(context.Context, *ReqSessionMessageDeleteDao) (*emptypb.Empty, error)
	// 会话消息清空
	SessionMessageFlushDao(context.Context, *ReqSessionMessageFlushDao) (*emptypb.Empty, error)
}

// UnimplementedDaoImServer can be embedded to have forward compatible implementations.
type UnimplementedDaoImServer struct {
}

func (*UnimplementedDaoImServer) SessionAddDao(context.Context, *ReqSessionAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionAddDao not implemented")
}
func (*UnimplementedDaoImServer) SessionUpdateDao(context.Context, *ReqSessionUpdateDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionUpdateDao not implemented")
}
func (*UnimplementedDaoImServer) SessionQueryDao(context.Context, *ReqSessionQueryDao) (*RspSessionQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionQueryDao not implemented")
}
func (*UnimplementedDaoImServer) SessionDetailQueryDao(context.Context, *ReqSessionDetailQueryDao) (*RspSessionDetailQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionDetailQueryDao not implemented")
}
func (*UnimplementedDaoImServer) SessionJoinDao(context.Context, *ReqSessionJoinDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionJoinDao not implemented")
}
func (*UnimplementedDaoImServer) SessionLeaveDao(context.Context, *ReqSessionLeaveDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionLeaveDao not implemented")
}
func (*UnimplementedDaoImServer) SessionDeleteDao(context.Context, *ReqSessionDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionDeleteDao not implemented")
}
func (*UnimplementedDaoImServer) SessionMessageAddDao(context.Context, *ReqSessionMessageAddDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionMessageAddDao not implemented")
}
func (*UnimplementedDaoImServer) SessionMessageQueryDao(context.Context, *ReqSessionMessageQueryDao) (*RspSessionMessageQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionMessageQueryDao not implemented")
}
func (*UnimplementedDaoImServer) SessionMessageReadStatusUpdateDao(context.Context, *ReqSessionMessageReadStatusUpdateDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionMessageReadStatusUpdateDao not implemented")
}
func (*UnimplementedDaoImServer) SessionMessageDeleteDao(context.Context, *ReqSessionMessageDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionMessageDeleteDao not implemented")
}
func (*UnimplementedDaoImServer) SessionMessageFlushDao(context.Context, *ReqSessionMessageFlushDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionMessageFlushDao not implemented")
}

func RegisterDaoImServer(s *grpc.Server, srv DaoImServer) {
	s.RegisterService(&_DaoIm_serviceDesc, srv)
}

func _DaoIm_SessionAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionAddDao(ctx, req.(*ReqSessionAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionUpdateDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionUpdateDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionUpdateDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionUpdateDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionUpdateDao(ctx, req.(*ReqSessionUpdateDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionQueryDao(ctx, req.(*ReqSessionQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionDetailQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionDetailQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionDetailQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionDetailQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionDetailQueryDao(ctx, req.(*ReqSessionDetailQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionJoinDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionJoinDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionJoinDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionJoinDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionJoinDao(ctx, req.(*ReqSessionJoinDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionLeaveDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionLeaveDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionLeaveDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionLeaveDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionLeaveDao(ctx, req.(*ReqSessionLeaveDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionDeleteDao(ctx, req.(*ReqSessionDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionMessageAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionMessageAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionMessageAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionMessageAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionMessageAddDao(ctx, req.(*ReqSessionMessageAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionMessageQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionMessageQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionMessageQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionMessageQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionMessageQueryDao(ctx, req.(*ReqSessionMessageQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionMessageReadStatusUpdateDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionMessageReadStatusUpdateDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionMessageReadStatusUpdateDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionMessageReadStatusUpdateDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionMessageReadStatusUpdateDao(ctx, req.(*ReqSessionMessageReadStatusUpdateDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionMessageDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionMessageDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionMessageDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionMessageDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionMessageDeleteDao(ctx, req.(*ReqSessionMessageDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoIm_SessionMessageFlushDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSessionMessageFlushDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoImServer).SessionMessageFlushDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.DaoIm/SessionMessageFlushDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoImServer).SessionMessageFlushDao(ctx, req.(*ReqSessionMessageFlushDao))
	}
	return interceptor(ctx, in, info, handler)
}

var _DaoIm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "im.DaoIm",
	HandlerType: (*DaoImServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SessionAddDao",
			Handler:    _DaoIm_SessionAddDao_Handler,
		},
		{
			MethodName: "SessionUpdateDao",
			Handler:    _DaoIm_SessionUpdateDao_Handler,
		},
		{
			MethodName: "SessionQueryDao",
			Handler:    _DaoIm_SessionQueryDao_Handler,
		},
		{
			MethodName: "SessionDetailQueryDao",
			Handler:    _DaoIm_SessionDetailQueryDao_Handler,
		},
		{
			MethodName: "SessionJoinDao",
			Handler:    _DaoIm_SessionJoinDao_Handler,
		},
		{
			MethodName: "SessionLeaveDao",
			Handler:    _DaoIm_SessionLeaveDao_Handler,
		},
		{
			MethodName: "SessionDeleteDao",
			Handler:    _DaoIm_SessionDeleteDao_Handler,
		},
		{
			MethodName: "SessionMessageAddDao",
			Handler:    _DaoIm_SessionMessageAddDao_Handler,
		},
		{
			MethodName: "SessionMessageQueryDao",
			Handler:    _DaoIm_SessionMessageQueryDao_Handler,
		},
		{
			MethodName: "SessionMessageReadStatusUpdateDao",
			Handler:    _DaoIm_SessionMessageReadStatusUpdateDao_Handler,
		},
		{
			MethodName: "SessionMessageDeleteDao",
			Handler:    _DaoIm_SessionMessageDeleteDao_Handler,
		},
		{
			MethodName: "SessionMessageFlushDao",
			Handler:    _DaoIm_SessionMessageFlushDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "im.proto",
}
