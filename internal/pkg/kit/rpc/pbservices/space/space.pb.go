// proto 文件版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: space.proto

// 生成文件的包名

package space

import (
	common "baby-fried-rice/internal/pkg/kit/rpc/pbservices/common"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpaceVisitorType int32

const (
	// 公开
	SpaceVisitorType_Public SpaceVisitorType = 0
	// 仅好友可见
	SpaceVisitorType_OnlyVisibleFriend SpaceVisitorType = 1
	// 部分好友可见
	SpaceVisitorType_PartVisibleFriend SpaceVisitorType = 2
	// 好友中指定部分不可见
	SpaceVisitorType_PartInvisibleFriend SpaceVisitorType = 3
	// 私有仅自己可见
	SpaceVisitorType_Private SpaceVisitorType = 4
)

// Enum value maps for SpaceVisitorType.
var (
	SpaceVisitorType_name = map[int32]string{
		0: "Public",
		1: "OnlyVisibleFriend",
		2: "PartVisibleFriend",
		3: "PartInvisibleFriend",
		4: "Private",
	}
	SpaceVisitorType_value = map[string]int32{
		"Public":              0,
		"OnlyVisibleFriend":   1,
		"PartVisibleFriend":   2,
		"PartInvisibleFriend": 3,
		"Private":             4,
	}
)

func (x SpaceVisitorType) Enum() *SpaceVisitorType {
	p := new(SpaceVisitorType)
	*p = x
	return p
}

func (x SpaceVisitorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceVisitorType) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[0].Descriptor()
}

func (SpaceVisitorType) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[0]
}

func (x SpaceVisitorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceVisitorType.Descriptor instead.
func (SpaceVisitorType) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

// 空间动态添加请求
type ReqSpaceAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作人
	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	// 动态内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 动态图片地址列表
	Images []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	// 访问类型
	VisitorType SpaceVisitorType `protobuf:"varint,4,opt,name=visitorType,proto3,enum=user.SpaceVisitorType" json:"visitorType,omitempty"`
}

func (x *ReqSpaceAddDao) Reset() {
	*x = ReqSpaceAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSpaceAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSpaceAddDao) ProtoMessage() {}

func (x *ReqSpaceAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSpaceAddDao.ProtoReflect.Descriptor instead.
func (*ReqSpaceAddDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

func (x *ReqSpaceAddDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ReqSpaceAddDao) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReqSpaceAddDao) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ReqSpaceAddDao) GetVisitorType() SpaceVisitorType {
	if x != nil {
		return x.VisitorType
	}
	return SpaceVisitorType_Public
}

// 空间动态添加返回
type RspSpaceAddDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RspSpaceAddDao) Reset() {
	*x = RspSpaceAddDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSpaceAddDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSpaceAddDao) ProtoMessage() {}

func (x *RspSpaceAddDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSpaceAddDao.ProtoReflect.Descriptor instead.
func (*RspSpaceAddDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

func (x *RspSpaceAddDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 空间动态查询请求
type ReqSpaceQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonSearchReq *common.CommonSearchRequest `protobuf:"bytes,1,opt,name=commonSearchReq,proto3" json:"commonSearchReq,omitempty"`
	SpaceId         string                      `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Origin          string                      `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ReqSpaceQueryDao) Reset() {
	*x = ReqSpaceQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSpaceQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSpaceQueryDao) ProtoMessage() {}

func (x *ReqSpaceQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSpaceQueryDao.ProtoReflect.Descriptor instead.
func (*ReqSpaceQueryDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

func (x *ReqSpaceQueryDao) GetCommonSearchReq() *common.CommonSearchRequest {
	if x != nil {
		return x.CommonSearchReq
	}
	return nil
}

func (x *ReqSpaceQueryDao) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ReqSpaceQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

// 空间动态查询返回
type RspSpaceQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spaces   []*SpaceQueryDao `protobuf:"bytes,1,rep,name=spaces,proto3" json:"spaces,omitempty"`
	Page     int64            `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64            `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RspSpaceQueryDao) Reset() {
	*x = RspSpaceQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSpaceQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSpaceQueryDao) ProtoMessage() {}

func (x *RspSpaceQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSpaceQueryDao.ProtoReflect.Descriptor instead.
func (*RspSpaceQueryDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

func (x *RspSpaceQueryDao) GetSpaces() []*SpaceQueryDao {
	if x != nil {
		return x.Spaces
	}
	return nil
}

func (x *RspSpaceQueryDao) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RspSpaceQueryDao) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 空间动态信息
type SpaceQueryDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间动态id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 空间动态发布者
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// 空间动态内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 空间动态图片地址列表
	Images []string `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	// 访问类型
	VisitorType SpaceVisitorType `protobuf:"varint,5,opt,name=visitorType,proto3,enum=user.SpaceVisitorType" json:"visitorType,omitempty"`
	// 访问量
	VisitTotal int64 `protobuf:"varint,6,opt,name=visitTotal,proto3" json:"visitTotal,omitempty"`
	// 点赞数
	LikeTotal int64 `protobuf:"varint,7,opt,name=likeTotal,proto3" json:"likeTotal,omitempty"`
	// 评论总数
	CommentTotal int64 `protobuf:"varint,8,opt,name=commentTotal,proto3" json:"commentTotal,omitempty"`
	// 楼层总数
	FloorTotal int64 `protobuf:"varint,9,opt,name=floorTotal,proto3" json:"floorTotal,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 访问者是否已点赞
	OriginLiked bool `protobuf:"varint,11,opt,name=originLiked,proto3" json:"originLiked,omitempty"`
}

func (x *SpaceQueryDao) Reset() {
	*x = SpaceQueryDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceQueryDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceQueryDao) ProtoMessage() {}

func (x *SpaceQueryDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceQueryDao.ProtoReflect.Descriptor instead.
func (*SpaceQueryDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

func (x *SpaceQueryDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpaceQueryDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SpaceQueryDao) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SpaceQueryDao) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SpaceQueryDao) GetVisitorType() SpaceVisitorType {
	if x != nil {
		return x.VisitorType
	}
	return SpaceVisitorType_Public
}

func (x *SpaceQueryDao) GetVisitTotal() int64 {
	if x != nil {
		return x.VisitTotal
	}
	return 0
}

func (x *SpaceQueryDao) GetLikeTotal() int64 {
	if x != nil {
		return x.LikeTotal
	}
	return 0
}

func (x *SpaceQueryDao) GetCommentTotal() int64 {
	if x != nil {
		return x.CommentTotal
	}
	return 0
}

func (x *SpaceQueryDao) GetFloorTotal() int64 {
	if x != nil {
		return x.FloorTotal
	}
	return 0
}

func (x *SpaceQueryDao) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SpaceQueryDao) GetOriginLiked() bool {
	if x != nil {
		return x.OriginLiked
	}
	return false
}

// 空间动态更新请求
type ReqSpaceIncrUpdateDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间动态id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 增量浏览数
	VisitIncrement int64 `protobuf:"varint,2,opt,name=visitIncrement,proto3" json:"visitIncrement,omitempty"`
	// 增量评论数，为负即为删除评论情况
	CommentIncrement int64 `protobuf:"varint,3,opt,name=commentIncrement,proto3" json:"commentIncrement,omitempty"`
	// 增量点赞数，为负即为取消点赞情况
	LikeIncrement int64 `protobuf:"varint,4,opt,name=likeIncrement,proto3" json:"likeIncrement,omitempty"`
	// 增量楼层数
	FloorIncrement int64 `protobuf:"varint,5,opt,name=floorIncrement,proto3" json:"floorIncrement,omitempty"`
}

func (x *ReqSpaceIncrUpdateDao) Reset() {
	*x = ReqSpaceIncrUpdateDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSpaceIncrUpdateDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSpaceIncrUpdateDao) ProtoMessage() {}

func (x *ReqSpaceIncrUpdateDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSpaceIncrUpdateDao.ProtoReflect.Descriptor instead.
func (*ReqSpaceIncrUpdateDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{5}
}

func (x *ReqSpaceIncrUpdateDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReqSpaceIncrUpdateDao) GetVisitIncrement() int64 {
	if x != nil {
		return x.VisitIncrement
	}
	return 0
}

func (x *ReqSpaceIncrUpdateDao) GetCommentIncrement() int64 {
	if x != nil {
		return x.CommentIncrement
	}
	return 0
}

func (x *ReqSpaceIncrUpdateDao) GetLikeIncrement() int64 {
	if x != nil {
		return x.LikeIncrement
	}
	return 0
}

func (x *ReqSpaceIncrUpdateDao) GetFloorIncrement() int64 {
	if x != nil {
		return x.FloorIncrement
	}
	return 0
}

// 空间动态删除请求参数
type ReqSpaceDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间动态id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 操作者id
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ReqSpaceDeleteDao) Reset() {
	*x = ReqSpaceDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSpaceDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSpaceDeleteDao) ProtoMessage() {}

func (x *ReqSpaceDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSpaceDeleteDao.ProtoReflect.Descriptor instead.
func (*ReqSpaceDeleteDao) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{6}
}

func (x *ReqSpaceDeleteDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReqSpaceDeleteDao) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

var File_space_proto protoreflect.FileDescriptor

var file_space_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x45, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x6f, 0x0a, 0x10, 0x52, 0x73, 0x70, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x52, 0x06,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64,
	0x22, 0xc9, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x63,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x11,
	0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2a, 0x72, 0x0a, 0x10, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x6e, 0x6c,
	0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x04, 0x32, 0x94, 0x02,
	0x0a, 0x08, 0x44, 0x61, 0x6f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x1a,
	0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x44, 0x61, 0x6f, 0x12, 0x41, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x6f, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x6f, 0x12, 0x49, 0x0a, 0x12, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x37, 0x5a, 0x35, 0x62, 0x61, 0x62, 0x79, 0x2d, 0x66, 0x72, 0x69,
	0x65, 0x64, 0x2d, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_proto_rawDescOnce sync.Once
	file_space_proto_rawDescData = file_space_proto_rawDesc
)

func file_space_proto_rawDescGZIP() []byte {
	file_space_proto_rawDescOnce.Do(func() {
		file_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_proto_rawDescData)
	})
	return file_space_proto_rawDescData
}

var file_space_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_space_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_space_proto_goTypes = []interface{}{
	(SpaceVisitorType)(0),              // 0: user.SpaceVisitorType
	(*ReqSpaceAddDao)(nil),             // 1: user.ReqSpaceAddDao
	(*RspSpaceAddDao)(nil),             // 2: user.RspSpaceAddDao
	(*ReqSpaceQueryDao)(nil),           // 3: user.ReqSpaceQueryDao
	(*RspSpaceQueryDao)(nil),           // 4: user.RspSpaceQueryDao
	(*SpaceQueryDao)(nil),              // 5: user.SpaceQueryDao
	(*ReqSpaceIncrUpdateDao)(nil),      // 6: user.ReqSpaceIncrUpdateDao
	(*ReqSpaceDeleteDao)(nil),          // 7: user.ReqSpaceDeleteDao
	(*common.CommonSearchRequest)(nil), // 8: common.CommonSearchRequest
	(*emptypb.Empty)(nil),              // 9: google.protobuf.Empty
}
var file_space_proto_depIdxs = []int32{
	0, // 0: user.ReqSpaceAddDao.visitorType:type_name -> user.SpaceVisitorType
	8, // 1: user.ReqSpaceQueryDao.commonSearchReq:type_name -> common.CommonSearchRequest
	5, // 2: user.RspSpaceQueryDao.spaces:type_name -> user.SpaceQueryDao
	0, // 3: user.SpaceQueryDao.visitorType:type_name -> user.SpaceVisitorType
	1, // 4: user.DaoSpace.SpaceAddDao:input_type -> user.ReqSpaceAddDao
	7, // 5: user.DaoSpace.SpaceDeleteDao:input_type -> user.ReqSpaceDeleteDao
	3, // 6: user.DaoSpace.SpaceQueryDao:input_type -> user.ReqSpaceQueryDao
	6, // 7: user.DaoSpace.SpaceIncrUpdateDao:input_type -> user.ReqSpaceIncrUpdateDao
	2, // 8: user.DaoSpace.SpaceAddDao:output_type -> user.RspSpaceAddDao
	9, // 9: user.DaoSpace.SpaceDeleteDao:output_type -> google.protobuf.Empty
	4, // 10: user.DaoSpace.SpaceQueryDao:output_type -> user.RspSpaceQueryDao
	9, // 11: user.DaoSpace.SpaceIncrUpdateDao:output_type -> google.protobuf.Empty
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_space_proto_init() }
func file_space_proto_init() {
	if File_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSpaceAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSpaceAddDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSpaceQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSpaceQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceQueryDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSpaceIncrUpdateDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSpaceDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_proto_goTypes,
		DependencyIndexes: file_space_proto_depIdxs,
		EnumInfos:         file_space_proto_enumTypes,
		MessageInfos:      file_space_proto_msgTypes,
	}.Build()
	File_space_proto = out.File
	file_space_proto_rawDesc = nil
	file_space_proto_goTypes = nil
	file_space_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DaoSpaceClient is the client API for DaoSpace service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DaoSpaceClient interface {
	// 空间动态添加
	SpaceAddDao(ctx context.Context, in *ReqSpaceAddDao, opts ...grpc.CallOption) (*RspSpaceAddDao, error)
	// 空间动态删除
	SpaceDeleteDao(ctx context.Context, in *ReqSpaceDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 空间动态查询
	SpaceQueryDao(ctx context.Context, in *ReqSpaceQueryDao, opts ...grpc.CallOption) (*RspSpaceQueryDao, error)
	// 空间动态信息更新，仅更新部分字段，比如浏览，评论，点赞
	SpaceIncrUpdateDao(ctx context.Context, in *ReqSpaceIncrUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type daoSpaceClient struct {
	cc grpc.ClientConnInterface
}

func NewDaoSpaceClient(cc grpc.ClientConnInterface) DaoSpaceClient {
	return &daoSpaceClient{cc}
}

func (c *daoSpaceClient) SpaceAddDao(ctx context.Context, in *ReqSpaceAddDao, opts ...grpc.CallOption) (*RspSpaceAddDao, error) {
	out := new(RspSpaceAddDao)
	err := c.cc.Invoke(ctx, "/user.DaoSpace/SpaceAddDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoSpaceClient) SpaceDeleteDao(ctx context.Context, in *ReqSpaceDeleteDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoSpace/SpaceDeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoSpaceClient) SpaceQueryDao(ctx context.Context, in *ReqSpaceQueryDao, opts ...grpc.CallOption) (*RspSpaceQueryDao, error) {
	out := new(RspSpaceQueryDao)
	err := c.cc.Invoke(ctx, "/user.DaoSpace/SpaceQueryDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daoSpaceClient) SpaceIncrUpdateDao(ctx context.Context, in *ReqSpaceIncrUpdateDao, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.DaoSpace/SpaceIncrUpdateDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DaoSpaceServer is the server API for DaoSpace service.
type DaoSpaceServer interface {
	// 空间动态添加
	SpaceAddDao(context.Context, *ReqSpaceAddDao) (*RspSpaceAddDao, error)
	// 空间动态删除
	SpaceDeleteDao(context.Context, *ReqSpaceDeleteDao) (*emptypb.Empty, error)
	// 空间动态查询
	SpaceQueryDao(context.Context, *ReqSpaceQueryDao) (*RspSpaceQueryDao, error)
	// 空间动态信息更新，仅更新部分字段，比如浏览，评论，点赞
	SpaceIncrUpdateDao(context.Context, *ReqSpaceIncrUpdateDao) (*emptypb.Empty, error)
}

// UnimplementedDaoSpaceServer can be embedded to have forward compatible implementations.
type UnimplementedDaoSpaceServer struct {
}

func (*UnimplementedDaoSpaceServer) SpaceAddDao(context.Context, *ReqSpaceAddDao) (*RspSpaceAddDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceAddDao not implemented")
}
func (*UnimplementedDaoSpaceServer) SpaceDeleteDao(context.Context, *ReqSpaceDeleteDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceDeleteDao not implemented")
}
func (*UnimplementedDaoSpaceServer) SpaceQueryDao(context.Context, *ReqSpaceQueryDao) (*RspSpaceQueryDao, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceQueryDao not implemented")
}
func (*UnimplementedDaoSpaceServer) SpaceIncrUpdateDao(context.Context, *ReqSpaceIncrUpdateDao) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceIncrUpdateDao not implemented")
}

func RegisterDaoSpaceServer(s *grpc.Server, srv DaoSpaceServer) {
	s.RegisterService(&_DaoSpace_serviceDesc, srv)
}

func _DaoSpace_SpaceAddDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSpaceAddDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoSpaceServer).SpaceAddDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoSpace/SpaceAddDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoSpaceServer).SpaceAddDao(ctx, req.(*ReqSpaceAddDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoSpace_SpaceDeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSpaceDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoSpaceServer).SpaceDeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoSpace/SpaceDeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoSpaceServer).SpaceDeleteDao(ctx, req.(*ReqSpaceDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoSpace_SpaceQueryDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSpaceQueryDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoSpaceServer).SpaceQueryDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoSpace/SpaceQueryDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoSpaceServer).SpaceQueryDao(ctx, req.(*ReqSpaceQueryDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _DaoSpace_SpaceIncrUpdateDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSpaceIncrUpdateDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaoSpaceServer).SpaceIncrUpdateDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DaoSpace/SpaceIncrUpdateDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaoSpaceServer).SpaceIncrUpdateDao(ctx, req.(*ReqSpaceIncrUpdateDao))
	}
	return interceptor(ctx, in, info, handler)
}

var _DaoSpace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.DaoSpace",
	HandlerType: (*DaoSpaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SpaceAddDao",
			Handler:    _DaoSpace_SpaceAddDao_Handler,
		},
		{
			MethodName: "SpaceDeleteDao",
			Handler:    _DaoSpace_SpaceDeleteDao_Handler,
		},
		{
			MethodName: "SpaceQueryDao",
			Handler:    _DaoSpace_SpaceQueryDao_Handler,
		},
		{
			MethodName: "SpaceIncrUpdateDao",
			Handler:    _DaoSpace_SpaceIncrUpdateDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "space.proto",
}
